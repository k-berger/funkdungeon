00000008 <dos.include.ab3@0> 
0000001E <dos.include.ab3@45> OPTIMIZE 6
00000028 <dos.include.ab3@46> SYNTAX 2
00000032 <dos.include.ab3@47> WBStartup
0000003C <dos.include.ab3@51> #USE_WBSTARTUPMSG = 1
0000003C <error.include.ab3@1> XINCLUDE "error.include.ab3"
00000046 <error.include.ab3@53> XINCLUDE "error.include.ab3"
00000050 <error.include.ab3@55> XINCLUDE "error.include.ab3"
00000096 <error.include.ab3@62> XINCLUDE "error.include.ab3"
000000C8 <error.include.ab3@63> XINCLUDE "error.include.ab3"
000000FA <error.include.ab3@64> XINCLUDE "error.include.ab3"
0000012C <error.include.ab3@65> XINCLUDE "error.include.ab3"
00000130 <error.include.ab3@66> XINCLUDE "error.include.ab3"
0000016E <error.include.ab3@67> XINCLUDE "error.include.ab3"
000001AC <error.include.ab3@68> XINCLUDE "error.include.ab3"
000001EA <error.include.ab3@69> XINCLUDE "error.include.ab3"
000001F4 <error.include.ab3@70> XINCLUDE "error.include.ab3"
000001FE <error.include.ab3@72> XINCLUDE "error.include.ab3"
00000232 <error.include.ab3@73> XINCLUDE "error.include.ab3"
0000023C <error.include.ab3@75> XINCLUDE "error.include.ab3"
00000246 <error.include.ab3@76> XINCLUDE "error.include.ab3"
00000250 <error.include.ab3@77> XINCLUDE "error.include.ab3"
0000025A <error.include.ab3@78> XINCLUDE "error.include.ab3"
00000264 <error.include.ab3@80> XINCLUDE "error.include.ab3"
0000026E <error.include.ab3@99> XINCLUDE "error.include.ab3"
0000028E <error.include.ab3@104> XINCLUDE "error.include.ab3"
000002E4 <error.include.ab3@124> XINCLUDE "error.include.ab3"
000002EE <error.include.ab3@125> XINCLUDE "error.include.ab3"
0000037C <error.include.ab3@126> XINCLUDE "error.include.ab3"
0000040A <error.include.ab3@127> XINCLUDE "error.include.ab3"
00000432 <error.include.ab3@129> XINCLUDE "error.include.ab3"
00000484 <error.include.ab3@130> XINCLUDE "error.include.ab3"
0000051A <error.include.ab3@131> XINCLUDE "error.include.ab3"
0000053A <error.include.ab3@133> XINCLUDE "error.include.ab3"
0000055A <error.include.ab3@134> XINCLUDE "error.include.ab3"
0000057A <error.include.ab3@135> XINCLUDE "error.include.ab3"
0000059A <error.include.ab3@136> XINCLUDE "error.include.ab3"
000005CC <error.include.ab3@137> XINCLUDE "error.include.ab3"
000005EC <error.include.ab3@138> XINCLUDE "error.include.ab3"
00000600 <error.include.ab3@139> XINCLUDE "error.include.ab3"
00000642 <error.include.ab3@141> XINCLUDE "error.include.ab3"
0000064C <error.include.ab3@143> XINCLUDE "error.include.ab3"
00000656 <error.include.ab3@144> XINCLUDE "error.include.ab3"
0000067E <error.include.ab3@146> XINCLUDE "error.include.ab3"
000006D0 <error.include.ab3@147> XINCLUDE "error.include.ab3"
000006E0 <error.include.ab3@148> XINCLUDE "error.include.ab3"
0000072E <error.include.ab3@149> XINCLUDE "error.include.ab3"
000007A2 <error.include.ab3@150> XINCLUDE "error.include.ab3"
000007AC <error.include.ab3@151> XINCLUDE "error.include.ab3"
000007B6 <error.include.ab3@152> XINCLUDE "error.include.ab3"
000007D0 <error.include.ab3@154> XINCLUDE "error.include.ab3"
000007F6 <error.include.ab3@156> XINCLUDE "error.include.ab3"
00000800 <error.include.ab3@195> XINCLUDE "error.include.ab3"
0000080A <error.include.ab3@231> XINCLUDE "error.include.ab3"
00000814 <error.include.ab3@272> XINCLUDE "error.include.ab3"
0000083E <error.include.ab3@303> XINCLUDE "error.include.ab3"
00000848 <error.include.ab3@304> XINCLUDE "error.include.ab3"
00000860 <error.include.ab3@305> XINCLUDE "error.include.ab3"
0000086E <error.include.ab3@306> XINCLUDE "error.include.ab3"
00000878 <error.include.ab3@322> XINCLUDE "error.include.ab3"
00000878 <dos.include.ab3@54> XINCLUDE "error.include.ab3"
00000878 <multilist.include.ab3@1> XINCLUDE "multilist.include.ab3"
00000882 <multilist.include.ab3@32> XINCLUDE "multilist.include.ab3"
0000088C <multilist.include.ab3@33> XINCLUDE "multilist.include.ab3"
00000896 <multilist.include.ab3@34> XINCLUDE "multilist.include.ab3"
00000896 <strptr.include.ab3@1> XINCLUDE "multilist.include.ab3"
000008A0 <strptr.include.ab3@25> XINCLUDE "multilist.include.ab3"
000008AA <strptr.include.ab3@31> XINCLUDE "multilist.include.ab3"
000008B4 <strptr.include.ab3@33> XINCLUDE "multilist.include.ab3"
000008BE <strptr.include.ab3@34> XINCLUDE "multilist.include.ab3"
000008BE <useful.include.ab3@1> XINCLUDE "multilist.include.ab3"
000008C8 <useful.include.ab3@90> XINCLUDE "multilist.include.ab3"
000008D2 <useful.include.ab3@94> XINCLUDE "multilist.include.ab3"
000008DC <useful.include.ab3@98> XINCLUDE "multilist.include.ab3"
000008E6 <useful.include.ab3@102> XINCLUDE "multilist.include.ab3"
000008F0 <useful.include.ab3@215> XINCLUDE "multilist.include.ab3"
000008FA <useful.include.ab3@216> XINCLUDE "multilist.include.ab3"
00000904 <useful.include.ab3@217> XINCLUDE "multilist.include.ab3"
0000090E <useful.include.ab3@219> XINCLUDE "multilist.include.ab3"
00000918 <useful.include.ab3@228> XINCLUDE "multilist.include.ab3"
00000922 <useful.include.ab3@243> XINCLUDE "multilist.include.ab3"
0000092C <useful.include.ab3@268> XINCLUDE "multilist.include.ab3"
00000936 <useful.include.ab3@273> XINCLUDE "multilist.include.ab3"
00000940 <useful.include.ab3@293> XINCLUDE "multilist.include.ab3"
0000094A <useful.include.ab3@375> XINCLUDE "multilist.include.ab3"
00000954 <useful.include.ab3@455> XINCLUDE "multilist.include.ab3"
0000095E <useful.include.ab3@522> XINCLUDE "multilist.include.ab3"
00000968 <useful.include.ab3@547> XINCLUDE "multilist.include.ab3"
00000968 <strptr.include.ab3@37> XINCLUDE "multilist.include.ab3"
00000996 <strptr.include.ab3@97> XINCLUDE "multilist.include.ab3"
00000A5A <strptr.include.ab3@98> XINCLUDE "multilist.include.ab3"
00000A6E <strptr.include.ab3@99> XINCLUDE "multilist.include.ab3"
00000BC2 <strptr.include.ab3@100> XINCLUDE "multilist.include.ab3"
00000BCC <strptr.include.ab3@101> XINCLUDE "multilist.include.ab3"
00000BDC <strptr.include.ab3@102> XINCLUDE "multilist.include.ab3"
00000BE6 <strptr.include.ab3@104> XINCLUDE "multilist.include.ab3"
00000C00 <strptr.include.ab3@105> XINCLUDE "multilist.include.ab3"
00000C8E <strptr.include.ab3@106> XINCLUDE "multilist.include.ab3"
00000C98 <strptr.include.ab3@107> XINCLUDE "multilist.include.ab3"
00000CA6 <strptr.include.ab3@108> XINCLUDE "multilist.include.ab3"
00000D34 <strptr.include.ab3@109> XINCLUDE "multilist.include.ab3"
00000D3E <strptr.include.ab3@110> XINCLUDE "multilist.include.ab3"
00000D60 <strptr.include.ab3@111> XINCLUDE "multilist.include.ab3"
00000D70 <strptr.include.ab3@112> XINCLUDE "multilist.include.ab3"
00000D74 <strptr.include.ab3@115> XINCLUDE "multilist.include.ab3"
00000DAA <strptr.include.ab3@166> XINCLUDE "multilist.include.ab3"
00000E6E <strptr.include.ab3@167> XINCLUDE "multilist.include.ab3"
00000E82 <strptr.include.ab3@168> XINCLUDE "multilist.include.ab3"
00000FD6 <strptr.include.ab3@169> XINCLUDE "multilist.include.ab3"
00000FEA <strptr.include.ab3@170> XINCLUDE "multilist.include.ab3"
0000100A <strptr.include.ab3@171> XINCLUDE "multilist.include.ab3"
0000101E <strptr.include.ab3@172> XINCLUDE "multilist.include.ab3"
00001068 <strptr.include.ab3@173> XINCLUDE "multilist.include.ab3"
00001072 <strptr.include.ab3@174> XINCLUDE "multilist.include.ab3"
00001092 <strptr.include.ab3@175> XINCLUDE "multilist.include.ab3"
000010C2 <strptr.include.ab3@179> XINCLUDE "multilist.include.ab3"
000010D6 <strptr.include.ab3@181> XINCLUDE "multilist.include.ab3"
000010EE <strptr.include.ab3@182> XINCLUDE "multilist.include.ab3"
00001108 <strptr.include.ab3@183> XINCLUDE "multilist.include.ab3"
0000113E <strptr.include.ab3@184> XINCLUDE "multilist.include.ab3"
00001168 <strptr.include.ab3@185> XINCLUDE "multilist.include.ab3"
00001172 <strptr.include.ab3@186> XINCLUDE "multilist.include.ab3"
0000117C <strptr.include.ab3@187> XINCLUDE "multilist.include.ab3"
00001186 <strptr.include.ab3@188> XINCLUDE "multilist.include.ab3"
00001190 <strptr.include.ab3@189> XINCLUDE "multilist.include.ab3"
000011A0 <strptr.include.ab3@190> XINCLUDE "multilist.include.ab3"
000011E2 <strptr.include.ab3@205> XINCLUDE "multilist.include.ab3"
000012A6 <strptr.include.ab3@206> XINCLUDE "multilist.include.ab3"
000012BA <strptr.include.ab3@207> XINCLUDE "multilist.include.ab3"
0000140E <strptr.include.ab3@208> XINCLUDE "multilist.include.ab3"
0000142C <strptr.include.ab3@209> XINCLUDE "multilist.include.ab3"
0000144C <strptr.include.ab3@210> XINCLUDE "multilist.include.ab3"
0000147C <strptr.include.ab3@214> XINCLUDE "multilist.include.ab3"
00001490 <strptr.include.ab3@217> XINCLUDE "multilist.include.ab3"
000014A8 <strptr.include.ab3@218> XINCLUDE "multilist.include.ab3"
000014C2 <strptr.include.ab3@219> XINCLUDE "multilist.include.ab3"
000014FA <strptr.include.ab3@220> XINCLUDE "multilist.include.ab3"
00001524 <strptr.include.ab3@221> XINCLUDE "multilist.include.ab3"
0000152E <strptr.include.ab3@222> XINCLUDE "multilist.include.ab3"
00001538 <strptr.include.ab3@223> XINCLUDE "multilist.include.ab3"
00001542 <strptr.include.ab3@224> XINCLUDE "multilist.include.ab3"
00001566 <strptr.include.ab3@225> XINCLUDE "multilist.include.ab3"
00001570 <strptr.include.ab3@227> XINCLUDE "multilist.include.ab3"
0000157A <strptr.include.ab3@248> XINCLUDE "multilist.include.ab3"
00001584 <strptr.include.ab3@269> XINCLUDE "multilist.include.ab3"
0000158E <strptr.include.ab3@276> XINCLUDE "multilist.include.ab3"
00001598 <strptr.include.ab3@284> XINCLUDE "multilist.include.ab3"
000015C6 <strptr.include.ab3@315> XINCLUDE "multilist.include.ab3"
0000168A <strptr.include.ab3@316> XINCLUDE "multilist.include.ab3"
0000169E <strptr.include.ab3@317> XINCLUDE "multilist.include.ab3"
000016B6 <strptr.include.ab3@318> XINCLUDE "multilist.include.ab3"
0000177A <strptr.include.ab3@319> XINCLUDE "multilist.include.ab3"
000017D6 <strptr.include.ab3@320> XINCLUDE "multilist.include.ab3"
000017E0 <strptr.include.ab3@321> XINCLUDE "multilist.include.ab3"
00001808 <strptr.include.ab3@322> XINCLUDE "multilist.include.ab3"
0000181E <strptr.include.ab3@323> XINCLUDE "multilist.include.ab3"
0000181E <multilist.include.ab3@44> XINCLUDE "multilist.include.ab3"
00001828 <multilist.include.ab3@46> XINCLUDE "multilist.include.ab3"
00001832 <multilist.include.ab3@60> XINCLUDE "multilist.include.ab3"
00001858 <multilist.include.ab3@61> XINCLUDE "multilist.include.ab3"
000018A6 <multilist.include.ab3@78> XINCLUDE "multilist.include.ab3"
000018B0 <multilist.include.ab3@79> XINCLUDE "multilist.include.ab3"
000018EE <multilist.include.ab3@80> XINCLUDE "multilist.include.ab3"
0000191E <multilist.include.ab3@81> XINCLUDE "multilist.include.ab3"
00001948 <multilist.include.ab3@82> XINCLUDE "multilist.include.ab3"
00001974 <multilist.include.ab3@83> XINCLUDE "multilist.include.ab3"
000019B2 <multilist.include.ab3@100> XINCLUDE "multilist.include.ab3"
000019D2 <multilist.include.ab3@101> XINCLUDE "multilist.include.ab3"
000019E6 <multilist.include.ab3@102> XINCLUDE "multilist.include.ab3"
00001A18 <multilist.include.ab3@103> XINCLUDE "multilist.include.ab3"
00001A1C <multilist.include.ab3@104> XINCLUDE "multilist.include.ab3"
00001A4E <multilist.include.ab3@105> XINCLUDE "multilist.include.ab3"
00001A58 <multilist.include.ab3@106> XINCLUDE "multilist.include.ab3"
00001A8C <multilist.include.ab3@107> XINCLUDE "multilist.include.ab3"
00001AB6 <multilist.include.ab3@108> XINCLUDE "multilist.include.ab3"
00001AC0 <multilist.include.ab3@125> XINCLUDE "multilist.include.ab3"
00001ACA <multilist.include.ab3@132> XINCLUDE "multilist.include.ab3"
00001B24 <multilist.include.ab3@153> XINCLUDE "multilist.include.ab3"
00001B4E <multilist.include.ab3@154> XINCLUDE "multilist.include.ab3"
00001B62 <multilist.include.ab3@155> XINCLUDE "multilist.include.ab3"
00001B80 <multilist.include.ab3@156> XINCLUDE "multilist.include.ab3"
00001B94 <multilist.include.ab3@158> XINCLUDE "multilist.include.ab3"
00001BB6 <multilist.include.ab3@159> XINCLUDE "multilist.include.ab3"
00001BD0 <multilist.include.ab3@160> XINCLUDE "multilist.include.ab3"
00001BD4 <multilist.include.ab3@161> XINCLUDE "multilist.include.ab3"
00001BF0 <multilist.include.ab3@162> XINCLUDE "multilist.include.ab3"
00001BFA <multilist.include.ab3@163> XINCLUDE "multilist.include.ab3"
00001C16 <multilist.include.ab3@165> XINCLUDE "multilist.include.ab3"
00001C36 <multilist.include.ab3@166> XINCLUDE "multilist.include.ab3"
00001C40 <multilist.include.ab3@167> XINCLUDE "multilist.include.ab3"
00001C60 <multilist.include.ab3@169> XINCLUDE "multilist.include.ab3"
00001C8C <multilist.include.ab3@170> XINCLUDE "multilist.include.ab3"
00001CB8 <multilist.include.ab3@171> XINCLUDE "multilist.include.ab3"
00001CD6 <multilist.include.ab3@172> XINCLUDE "multilist.include.ab3"
00001CF2 <multilist.include.ab3@173> XINCLUDE "multilist.include.ab3"
00001CFC <multilist.include.ab3@174> XINCLUDE "multilist.include.ab3"
00001D10 <multilist.include.ab3@175> XINCLUDE "multilist.include.ab3"
00001D38 <multilist.include.ab3@176> XINCLUDE "multilist.include.ab3"
00001D42 <multilist.include.ab3@197> XINCLUDE "multilist.include.ab3"
00001D9C <multilist.include.ab3@243> XINCLUDE "multilist.include.ab3"
00001DB0 <multilist.include.ab3@244> XINCLUDE "multilist.include.ab3"
00001DDA <multilist.include.ab3@245> XINCLUDE "multilist.include.ab3"
00001DEE <multilist.include.ab3@246> XINCLUDE "multilist.include.ab3"
00001E0C <multilist.include.ab3@247> XINCLUDE "multilist.include.ab3"
00001E58 <multilist.include.ab3@248> XINCLUDE "multilist.include.ab3"
00001E6C <multilist.include.ab3@249> XINCLUDE "multilist.include.ab3"
00001EC2 <multilist.include.ab3@250> XINCLUDE "multilist.include.ab3"
00001EE2 <multilist.include.ab3@251> XINCLUDE "multilist.include.ab3"
00001EF2 <multilist.include.ab3@252> XINCLUDE "multilist.include.ab3"
00001F1E <multilist.include.ab3@253> XINCLUDE "multilist.include.ab3"
00001F4A <multilist.include.ab3@254> XINCLUDE "multilist.include.ab3"
00001F5C <multilist.include.ab3@255> XINCLUDE "multilist.include.ab3"
00001F76 <multilist.include.ab3@256> XINCLUDE "multilist.include.ab3"
00001F7A <multilist.include.ab3@257> XINCLUDE "multilist.include.ab3"
00001F8A <multilist.include.ab3@258> XINCLUDE "multilist.include.ab3"
00001F94 <multilist.include.ab3@259> XINCLUDE "multilist.include.ab3"
00001FA2 <multilist.include.ab3@260> XINCLUDE "multilist.include.ab3"
00001FAC <multilist.include.ab3@261> XINCLUDE "multilist.include.ab3"
00001FBC <multilist.include.ab3@263> XINCLUDE "multilist.include.ab3"
00001FE8 <multilist.include.ab3@264> XINCLUDE "multilist.include.ab3"
0000204A <multilist.include.ab3@266> XINCLUDE "multilist.include.ab3"
000020BC <multilist.include.ab3@267> XINCLUDE "multilist.include.ab3"
000020CE <multilist.include.ab3@269> XINCLUDE "multilist.include.ab3"
000020E8 <multilist.include.ab3@270> XINCLUDE "multilist.include.ab3"
000020EC <multilist.include.ab3@272> XINCLUDE "multilist.include.ab3"
000020FC <multilist.include.ab3@273> XINCLUDE "multilist.include.ab3"
00002106 <multilist.include.ab3@274> XINCLUDE "multilist.include.ab3"
00002114 <multilist.include.ab3@275> XINCLUDE "multilist.include.ab3"
0000216E <multilist.include.ab3@277> XINCLUDE "multilist.include.ab3"
000021AA <multilist.include.ab3@279> XINCLUDE "multilist.include.ab3"
000021E2 <multilist.include.ab3@280> XINCLUDE "multilist.include.ab3"
00002200 <multilist.include.ab3@282> XINCLUDE "multilist.include.ab3"
0000221A <multilist.include.ab3@283> XINCLUDE "multilist.include.ab3"
00002238 <multilist.include.ab3@284> XINCLUDE "multilist.include.ab3"
00002258 <multilist.include.ab3@285> XINCLUDE "multilist.include.ab3"
00002278 <multilist.include.ab3@287> XINCLUDE "multilist.include.ab3"
000022A4 <multilist.include.ab3@288> XINCLUDE "multilist.include.ab3"
000022D0 <multilist.include.ab3@289> XINCLUDE "multilist.include.ab3"
000022EE <multilist.include.ab3@290> XINCLUDE "multilist.include.ab3"
0000230A <multilist.include.ab3@291> XINCLUDE "multilist.include.ab3"
00002356 <multilist.include.ab3@292> XINCLUDE "multilist.include.ab3"
00002360 <multilist.include.ab3@293> XINCLUDE "multilist.include.ab3"
00002364 <multilist.include.ab3@294> XINCLUDE "multilist.include.ab3"
000023D8 <multilist.include.ab3@295> XINCLUDE "multilist.include.ab3"
000023E2 <multilist.include.ab3@296> XINCLUDE "multilist.include.ab3"
000023F6 <multilist.include.ab3@297> XINCLUDE "multilist.include.ab3"
0000241E <multilist.include.ab3@298> XINCLUDE "multilist.include.ab3"
00002478 <multilist.include.ab3@320> XINCLUDE "multilist.include.ab3"
0000248C <multilist.include.ab3@321> XINCLUDE "multilist.include.ab3"
000024B6 <multilist.include.ab3@322> XINCLUDE "multilist.include.ab3"
000024CA <multilist.include.ab3@323> XINCLUDE "multilist.include.ab3"
000024DE <multilist.include.ab3@324> XINCLUDE "multilist.include.ab3"
000024FC <multilist.include.ab3@325> XINCLUDE "multilist.include.ab3"
00002552 <multilist.include.ab3@327> XINCLUDE "multilist.include.ab3"
00002572 <multilist.include.ab3@328> XINCLUDE "multilist.include.ab3"
00002582 <multilist.include.ab3@329> XINCLUDE "multilist.include.ab3"
000025AE <multilist.include.ab3@330> XINCLUDE "multilist.include.ab3"
000025DA <multilist.include.ab3@331> XINCLUDE "multilist.include.ab3"
000025EC <multilist.include.ab3@332> XINCLUDE "multilist.include.ab3"
00002606 <multilist.include.ab3@333> XINCLUDE "multilist.include.ab3"
0000260A <multilist.include.ab3@334> XINCLUDE "multilist.include.ab3"
0000261A <multilist.include.ab3@335> XINCLUDE "multilist.include.ab3"
00002624 <multilist.include.ab3@336> XINCLUDE "multilist.include.ab3"
00002632 <multilist.include.ab3@337> XINCLUDE "multilist.include.ab3"
0000263C <multilist.include.ab3@338> XINCLUDE "multilist.include.ab3"
0000264C <multilist.include.ab3@340> XINCLUDE "multilist.include.ab3"
00002678 <multilist.include.ab3@341> XINCLUDE "multilist.include.ab3"
000026DA <multilist.include.ab3@343> XINCLUDE "multilist.include.ab3"
0000274C <multilist.include.ab3@344> XINCLUDE "multilist.include.ab3"
0000275E <multilist.include.ab3@345> XINCLUDE "multilist.include.ab3"
00002778 <multilist.include.ab3@346> XINCLUDE "multilist.include.ab3"
0000277C <multilist.include.ab3@348> XINCLUDE "multilist.include.ab3"
0000278C <multilist.include.ab3@349> XINCLUDE "multilist.include.ab3"
00002796 <multilist.include.ab3@350> XINCLUDE "multilist.include.ab3"
000027A4 <multilist.include.ab3@351> XINCLUDE "multilist.include.ab3"
000027EC <multilist.include.ab3@353> XINCLUDE "multilist.include.ab3"
00002828 <multilist.include.ab3@354> XINCLUDE "multilist.include.ab3"
00002860 <multilist.include.ab3@355> XINCLUDE "multilist.include.ab3"
0000287E <multilist.include.ab3@357> XINCLUDE "multilist.include.ab3"
00002898 <multilist.include.ab3@358> XINCLUDE "multilist.include.ab3"
000028B6 <multilist.include.ab3@359> XINCLUDE "multilist.include.ab3"
000028D6 <multilist.include.ab3@360> XINCLUDE "multilist.include.ab3"
000028F6 <multilist.include.ab3@362> XINCLUDE "multilist.include.ab3"
00002922 <multilist.include.ab3@363> XINCLUDE "multilist.include.ab3"
0000294E <multilist.include.ab3@364> XINCLUDE "multilist.include.ab3"
0000296C <multilist.include.ab3@365> XINCLUDE "multilist.include.ab3"
00002988 <multilist.include.ab3@366> XINCLUDE "multilist.include.ab3"
000029AA <multilist.include.ab3@367> XINCLUDE "multilist.include.ab3"
000029B4 <multilist.include.ab3@368> XINCLUDE "multilist.include.ab3"
000029B8 <multilist.include.ab3@369> XINCLUDE "multilist.include.ab3"
00002A2C <multilist.include.ab3@370> XINCLUDE "multilist.include.ab3"
00002A36 <multilist.include.ab3@371> XINCLUDE "multilist.include.ab3"
00002A4A <multilist.include.ab3@372> XINCLUDE "multilist.include.ab3"
00002A72 <multilist.include.ab3@373> XINCLUDE "multilist.include.ab3"
00002AA0 <multilist.include.ab3@390> XINCLUDE "multilist.include.ab3"
00002B0A <multilist.include.ab3@391> XINCLUDE "multilist.include.ab3"
00002B1E <multilist.include.ab3@392> XINCLUDE "multilist.include.ab3"
00002B30 <multilist.include.ab3@393> XINCLUDE "multilist.include.ab3"
00002B5E <multilist.include.ab3@406> XINCLUDE "multilist.include.ab3"
00002B72 <multilist.include.ab3@407> XINCLUDE "multilist.include.ab3"
00002BC2 <multilist.include.ab3@408> XINCLUDE "multilist.include.ab3"
00002C14 <multilist.include.ab3@409> XINCLUDE "multilist.include.ab3"
00002C34 <multilist.include.ab3@410> XINCLUDE "multilist.include.ab3"
00002C62 <multilist.include.ab3@411> XINCLUDE "multilist.include.ab3"
00002C8C <multilist.include.ab3@412> XINCLUDE "multilist.include.ab3"
00002C96 <multilist.include.ab3@413> XINCLUDE "multilist.include.ab3"
00002CA0 <multilist.include.ab3@414> XINCLUDE "multilist.include.ab3"
00002CC0 <multilist.include.ab3@415> XINCLUDE "multilist.include.ab3"
00002CE0 <multilist.include.ab3@416> XINCLUDE "multilist.include.ab3"
00002CEE <multilist.include.ab3@417> XINCLUDE "multilist.include.ab3"
00002D0E <multilist.include.ab3@418> XINCLUDE "multilist.include.ab3"
00002D2E <multilist.include.ab3@419> XINCLUDE "multilist.include.ab3"
00002D52 <multilist.include.ab3@420> XINCLUDE "multilist.include.ab3"
00002D5C <multilist.include.ab3@421> XINCLUDE "multilist.include.ab3"
00002D6C <multilist.include.ab3@422> XINCLUDE "multilist.include.ab3"
00002D9A <multilist.include.ab3@439> XINCLUDE "multilist.include.ab3"
00002DAE <multilist.include.ab3@440> XINCLUDE "multilist.include.ab3"
00002DCA <multilist.include.ab3@441> XINCLUDE "multilist.include.ab3"
00002DCE <multilist.include.ab3@442> XINCLUDE "multilist.include.ab3"
00002DE4 <multilist.include.ab3@443> XINCLUDE "multilist.include.ab3"
00002DEE <multilist.include.ab3@444> XINCLUDE "multilist.include.ab3"
00002E00 <multilist.include.ab3@445> XINCLUDE "multilist.include.ab3"
00002E0A <multilist.include.ab3@447> XINCLUDE "multilist.include.ab3"
00002E14 <multilist.include.ab3@455> XINCLUDE "multilist.include.ab3"
00002E1E <multilist.include.ab3@479> XINCLUDE "multilist.include.ab3"
00002E4C <multilist.include.ab3@501> XINCLUDE "multilist.include.ab3"
00002E60 <multilist.include.ab3@502> XINCLUDE "multilist.include.ab3"
00002EA0 <multilist.include.ab3@503> XINCLUDE "multilist.include.ab3"
00002EA4 <multilist.include.ab3@504> XINCLUDE "multilist.include.ab3"
00002ECC <multilist.include.ab3@505> XINCLUDE "multilist.include.ab3"
00002ED6 <multilist.include.ab3@506> XINCLUDE "multilist.include.ab3"
00002EEC <multilist.include.ab3@507> XINCLUDE "multilist.include.ab3"
00002EF6 <multilist.include.ab3@521> XINCLUDE "multilist.include.ab3"
00002F00 <multilist.include.ab3@537> XINCLUDE "multilist.include.ab3"
00002F0A <multilist.include.ab3@541> XINCLUDE "multilist.include.ab3"
00002F14 <multilist.include.ab3@545> XINCLUDE "multilist.include.ab3"
00002F42 <multilist.include.ab3@565> XINCLUDE "multilist.include.ab3"
00002F56 <multilist.include.ab3@566> XINCLUDE "multilist.include.ab3"
00002F96 <multilist.include.ab3@567> XINCLUDE "multilist.include.ab3"
00002F9A <multilist.include.ab3@568> XINCLUDE "multilist.include.ab3"
00002FC2 <multilist.include.ab3@569> XINCLUDE "multilist.include.ab3"
00002FCC <multilist.include.ab3@570> XINCLUDE "multilist.include.ab3"
00002FE2 <multilist.include.ab3@571> XINCLUDE "multilist.include.ab3"
00003010 <multilist.include.ab3@585> XINCLUDE "multilist.include.ab3"
0000307A <multilist.include.ab3@586> XINCLUDE "multilist.include.ab3"
0000308E <multilist.include.ab3@588> XINCLUDE "multilist.include.ab3"
000030A8 <multilist.include.ab3@589> XINCLUDE "multilist.include.ab3"
000030F8 <multilist.include.ab3@590> XINCLUDE "multilist.include.ab3"
0000314A <multilist.include.ab3@591> XINCLUDE "multilist.include.ab3"
0000316A <multilist.include.ab3@592> XINCLUDE "multilist.include.ab3"
00003198 <multilist.include.ab3@593> XINCLUDE "multilist.include.ab3"
000031C2 <multilist.include.ab3@594> XINCLUDE "multilist.include.ab3"
000031CC <multilist.include.ab3@595> XINCLUDE "multilist.include.ab3"
000031D6 <multilist.include.ab3@596> XINCLUDE "multilist.include.ab3"
000031F6 <multilist.include.ab3@597> XINCLUDE "multilist.include.ab3"
00003216 <multilist.include.ab3@598> XINCLUDE "multilist.include.ab3"
00003224 <multilist.include.ab3@599> XINCLUDE "multilist.include.ab3"
00003244 <multilist.include.ab3@600> XINCLUDE "multilist.include.ab3"
00003264 <multilist.include.ab3@601> XINCLUDE "multilist.include.ab3"
00003288 <multilist.include.ab3@602> XINCLUDE "multilist.include.ab3"
0000329A <multilist.include.ab3@603> XINCLUDE "multilist.include.ab3"
000032A8 <multilist.include.ab3@604> XINCLUDE "multilist.include.ab3"
000032B8 <multilist.include.ab3@605> XINCLUDE "multilist.include.ab3"
000032E6 <multilist.include.ab3@618> XINCLUDE "multilist.include.ab3"
000032FA <multilist.include.ab3@619> XINCLUDE "multilist.include.ab3"
0000331A <multilist.include.ab3@620> XINCLUDE "multilist.include.ab3"
0000333A <multilist.include.ab3@621> XINCLUDE "multilist.include.ab3"
00003348 <multilist.include.ab3@622> XINCLUDE "multilist.include.ab3"
00003352 <multilist.include.ab3@623> XINCLUDE "multilist.include.ab3"
00003362 <multilist.include.ab3@624> XINCLUDE "multilist.include.ab3"
00003390 <multilist.include.ab3@638> XINCLUDE "multilist.include.ab3"
000033A4 <multilist.include.ab3@639> XINCLUDE "multilist.include.ab3"
000033C0 <multilist.include.ab3@640> XINCLUDE "multilist.include.ab3"
000033CA <multilist.include.ab3@641> XINCLUDE "multilist.include.ab3"
000033DA <multilist.include.ab3@642> XINCLUDE "multilist.include.ab3"
00003408 <multilist.include.ab3@656> XINCLUDE "multilist.include.ab3"
0000341C <multilist.include.ab3@657> XINCLUDE "multilist.include.ab3"
00003438 <multilist.include.ab3@658> XINCLUDE "multilist.include.ab3"
00003442 <multilist.include.ab3@659> XINCLUDE "multilist.include.ab3"
00003452 <multilist.include.ab3@660> XINCLUDE "multilist.include.ab3"
0000345C <multilist.include.ab3@673> XINCLUDE "multilist.include.ab3"
00003466 <multilist.include.ab3@690> XINCLUDE "multilist.include.ab3"
00003494 <multilist.include.ab3@713> XINCLUDE "multilist.include.ab3"
000034A8 <multilist.include.ab3@714> XINCLUDE "multilist.include.ab3"
000034BC <multilist.include.ab3@715> XINCLUDE "multilist.include.ab3"
000034E8 <multilist.include.ab3@716> XINCLUDE "multilist.include.ab3"
0000350A <multilist.include.ab3@717> XINCLUDE "multilist.include.ab3"
00003546 <multilist.include.ab3@718> XINCLUDE "multilist.include.ab3"
00003550 <multilist.include.ab3@719> XINCLUDE "multilist.include.ab3"
0000355A <multilist.include.ab3@720> XINCLUDE "multilist.include.ab3"
00003574 <multilist.include.ab3@721> XINCLUDE "multilist.include.ab3"
0000358E <multilist.include.ab3@722> XINCLUDE "multilist.include.ab3"
0000359C <multilist.include.ab3@723> XINCLUDE "multilist.include.ab3"
000035B0 <multilist.include.ab3@724> XINCLUDE "multilist.include.ab3"
000035C2 <multilist.include.ab3@725> XINCLUDE "multilist.include.ab3"
000035F4 <multilist.include.ab3@742> XINCLUDE "multilist.include.ab3"
00003608 <multilist.include.ab3@743> XINCLUDE "multilist.include.ab3"
0000361C <multilist.include.ab3@744> XINCLUDE "multilist.include.ab3"
0000365E <multilist.include.ab3@745> XINCLUDE "multilist.include.ab3"
0000368A <multilist.include.ab3@746> XINCLUDE "multilist.include.ab3"
000036AC <multilist.include.ab3@747> XINCLUDE "multilist.include.ab3"
000036FA <multilist.include.ab3@748> XINCLUDE "multilist.include.ab3"
00003704 <multilist.include.ab3@749> XINCLUDE "multilist.include.ab3"
0000370E <multilist.include.ab3@750> XINCLUDE "multilist.include.ab3"
00003728 <multilist.include.ab3@751> XINCLUDE "multilist.include.ab3"
00003742 <multilist.include.ab3@752> XINCLUDE "multilist.include.ab3"
00003750 <multilist.include.ab3@753> XINCLUDE "multilist.include.ab3"
00003764 <multilist.include.ab3@754> XINCLUDE "multilist.include.ab3"
00003768 <multilist.include.ab3@756> XINCLUDE "multilist.include.ab3"
0000377A <multilist.include.ab3@757> XINCLUDE "multilist.include.ab3"
00003784 <multilist.include.ab3@775> XINCLUDE "multilist.include.ab3"
000037B2 <multilist.include.ab3@795> XINCLUDE "multilist.include.ab3"
000037C6 <multilist.include.ab3@796> XINCLUDE "multilist.include.ab3"
000037E2 <multilist.include.ab3@797> XINCLUDE "multilist.include.ab3"
0000380E <multilist.include.ab3@798> XINCLUDE "multilist.include.ab3"
0000382E <multilist.include.ab3@799> XINCLUDE "multilist.include.ab3"
00003838 <multilist.include.ab3@800> XINCLUDE "multilist.include.ab3"
00003852 <multilist.include.ab3@801> XINCLUDE "multilist.include.ab3"
00003860 <multilist.include.ab3@802> XINCLUDE "multilist.include.ab3"
00003870 <multilist.include.ab3@803> XINCLUDE "multilist.include.ab3"
000038A6 <multilist.include.ab3@821> XINCLUDE "multilist.include.ab3"
000038BA <multilist.include.ab3@822> XINCLUDE "multilist.include.ab3"
000038F0 <multilist.include.ab3@823> XINCLUDE "multilist.include.ab3"
00003904 <multilist.include.ab3@824> XINCLUDE "multilist.include.ab3"
00003930 <multilist.include.ab3@825> XINCLUDE "multilist.include.ab3"
00003952 <multilist.include.ab3@826> XINCLUDE "multilist.include.ab3"
000039C0 <multilist.include.ab3@827> XINCLUDE "multilist.include.ab3"
00003A06 <multilist.include.ab3@828> XINCLUDE "multilist.include.ab3"
00003A22 <multilist.include.ab3@829> XINCLUDE "multilist.include.ab3"
00003A56 <multilist.include.ab3@830> XINCLUDE "multilist.include.ab3"
00003A5A <multilist.include.ab3@831> XINCLUDE "multilist.include.ab3"
00003AC8 <multilist.include.ab3@832> XINCLUDE "multilist.include.ab3"
00003B0E <multilist.include.ab3@833> XINCLUDE "multilist.include.ab3"
00003B18 <multilist.include.ab3@834> XINCLUDE "multilist.include.ab3"
00003B1C <multilist.include.ab3@835> XINCLUDE "multilist.include.ab3"
00003B66 <multilist.include.ab3@836> XINCLUDE "multilist.include.ab3"
00003BAC <multilist.include.ab3@837> XINCLUDE "multilist.include.ab3"
00003BB6 <multilist.include.ab3@838> XINCLUDE "multilist.include.ab3"
00003BD2 <multilist.include.ab3@839> XINCLUDE "multilist.include.ab3"
00003BEC <multilist.include.ab3@840> XINCLUDE "multilist.include.ab3"
00003BFA <multilist.include.ab3@841> XINCLUDE "multilist.include.ab3"
00003C0E <multilist.include.ab3@842> XINCLUDE "multilist.include.ab3"
00003C2E <multilist.include.ab3@843> XINCLUDE "multilist.include.ab3"
00003C88 <multilist.include.ab3@870> XINCLUDE "multilist.include.ab3"
00003C9C <multilist.include.ab3@871> XINCLUDE "multilist.include.ab3"
00003CDA <multilist.include.ab3@872> XINCLUDE "multilist.include.ab3"
00003D2C <multilist.include.ab3@873> XINCLUDE "multilist.include.ab3"
00003D6A <multilist.include.ab3@874> XINCLUDE "multilist.include.ab3"
00003D8E <multilist.include.ab3@875> XINCLUDE "multilist.include.ab3"
00003DB2 <multilist.include.ab3@876> XINCLUDE "multilist.include.ab3"
00003E78 <multilist.include.ab3@877> XINCLUDE "multilist.include.ab3"
00003E9A <multilist.include.ab3@879> XINCLUDE "multilist.include.ab3"
00003EBC <multilist.include.ab3@880> XINCLUDE "multilist.include.ab3"
00003EC0 <multilist.include.ab3@881> XINCLUDE "multilist.include.ab3"
00003EE2 <multilist.include.ab3@882> XINCLUDE "multilist.include.ab3"
00003EEC <multilist.include.ab3@883> XINCLUDE "multilist.include.ab3"
00003F18 <multilist.include.ab3@884> XINCLUDE "multilist.include.ab3"
00003F3C <multilist.include.ab3@886> XINCLUDE "multilist.include.ab3"
00003F5E <multilist.include.ab3@887> XINCLUDE "multilist.include.ab3"
00003F7C <multilist.include.ab3@888> XINCLUDE "multilist.include.ab3"
00003FEA <multilist.include.ab3@889> XINCLUDE "multilist.include.ab3"
00004040 <multilist.include.ab3@890> XINCLUDE "multilist.include.ab3"
0000407C <multilist.include.ab3@891> XINCLUDE "multilist.include.ab3"
00004086 <multilist.include.ab3@892> XINCLUDE "multilist.include.ab3"
0000412A <multilist.include.ab3@893> XINCLUDE "multilist.include.ab3"
0000412E <multilist.include.ab3@894> XINCLUDE "multilist.include.ab3"
0000414C <multilist.include.ab3@895> XINCLUDE "multilist.include.ab3"
000041BA <multilist.include.ab3@896> XINCLUDE "multilist.include.ab3"
00004210 <multilist.include.ab3@897> XINCLUDE "multilist.include.ab3"
0000424C <multilist.include.ab3@898> XINCLUDE "multilist.include.ab3"
00004256 <multilist.include.ab3@899> XINCLUDE "multilist.include.ab3"
00004260 <multilist.include.ab3@900> XINCLUDE "multilist.include.ab3"
00004264 <multilist.include.ab3@901> XINCLUDE "multilist.include.ab3"
00004288 <multilist.include.ab3@902> XINCLUDE "multilist.include.ab3"
000042A6 <multilist.include.ab3@903> XINCLUDE "multilist.include.ab3"
000042F0 <multilist.include.ab3@904> XINCLUDE "multilist.include.ab3"
00004346 <multilist.include.ab3@905> XINCLUDE "multilist.include.ab3"
00004382 <multilist.include.ab3@906> XINCLUDE "multilist.include.ab3"
0000438C <multilist.include.ab3@907> XINCLUDE "multilist.include.ab3"
00004396 <multilist.include.ab3@908> XINCLUDE "multilist.include.ab3"
000043B0 <multilist.include.ab3@909> XINCLUDE "multilist.include.ab3"
000043CA <multilist.include.ab3@910> XINCLUDE "multilist.include.ab3"
000043D8 <multilist.include.ab3@911> XINCLUDE "multilist.include.ab3"
000043EC <multilist.include.ab3@912> XINCLUDE "multilist.include.ab3"
0000440C <multilist.include.ab3@913> XINCLUDE "multilist.include.ab3"
0000445E <multilist.include.ab3@928> XINCLUDE "multilist.include.ab3"
00004468 <multilist.include.ab3@929> XINCLUDE "multilist.include.ab3"
0000447C <multilist.include.ab3@930> XINCLUDE "multilist.include.ab3"
000044FE <multilist.include.ab3@931> XINCLUDE "multilist.include.ab3"
00004528 <multilist.include.ab3@932> XINCLUDE "multilist.include.ab3"
0000453C <multilist.include.ab3@933> XINCLUDE "multilist.include.ab3"
0000455A <multilist.include.ab3@934> XINCLUDE "multilist.include.ab3"
0000456E <multilist.include.ab3@935> XINCLUDE "multilist.include.ab3"
000045F4 <multilist.include.ab3@937> XINCLUDE "multilist.include.ab3"
0000462E <multilist.include.ab3@938> XINCLUDE "multilist.include.ab3"
00004662 <multilist.include.ab3@939> XINCLUDE "multilist.include.ab3"
00004692 <multilist.include.ab3@940> XINCLUDE "multilist.include.ab3"
000046C2 <multilist.include.ab3@941> XINCLUDE "multilist.include.ab3"
00004756 <multilist.include.ab3@942> XINCLUDE "multilist.include.ab3"
00004782 <multilist.include.ab3@943> XINCLUDE "multilist.include.ab3"
000047B8 <multilist.include.ab3@944> XINCLUDE "multilist.include.ab3"
00004868 <multilist.include.ab3@945> XINCLUDE "multilist.include.ab3"
00004872 <multilist.include.ab3@946> XINCLUDE "multilist.include.ab3"
00004876 <multilist.include.ab3@947> XINCLUDE "multilist.include.ab3"
00004926 <multilist.include.ab3@948> XINCLUDE "multilist.include.ab3"
00004930 <multilist.include.ab3@949> XINCLUDE "multilist.include.ab3"
0000493E <multilist.include.ab3@950> XINCLUDE "multilist.include.ab3"
00004948 <multilist.include.ab3@951> XINCLUDE "multilist.include.ab3"
00004966 <multilist.include.ab3@953> XINCLUDE "multilist.include.ab3"
00004970 <multilist.include.ab3@954> XINCLUDE "multilist.include.ab3"
0000498A <multilist.include.ab3@955> XINCLUDE "multilist.include.ab3"
00004994 <multilist.include.ab3@956> XINCLUDE "multilist.include.ab3"
0000499E <multilist.include.ab3@957> XINCLUDE "multilist.include.ab3"
000049D4 <multilist.include.ab3@958> XINCLUDE "multilist.include.ab3"
00004A2A <multilist.include.ab3@976> XINCLUDE "multilist.include.ab3"
00004A34 <multilist.include.ab3@977> XINCLUDE "multilist.include.ab3"
00004AB6 <multilist.include.ab3@978> XINCLUDE "multilist.include.ab3"
00004AE0 <multilist.include.ab3@979> XINCLUDE "multilist.include.ab3"
00004AF4 <multilist.include.ab3@980> XINCLUDE "multilist.include.ab3"
00004B12 <multilist.include.ab3@981> XINCLUDE "multilist.include.ab3"
00004B26 <multilist.include.ab3@982> XINCLUDE "multilist.include.ab3"
00004BAC <multilist.include.ab3@983> XINCLUDE "multilist.include.ab3"
00004BE6 <multilist.include.ab3@984> XINCLUDE "multilist.include.ab3"
00004C1A <multilist.include.ab3@985> XINCLUDE "multilist.include.ab3"
00004C4A <multilist.include.ab3@986> XINCLUDE "multilist.include.ab3"
00004C7A <multilist.include.ab3@987> XINCLUDE "multilist.include.ab3"
00004D0E <multilist.include.ab3@988> XINCLUDE "multilist.include.ab3"
00004D3A <multilist.include.ab3@989> XINCLUDE "multilist.include.ab3"
00004D70 <multilist.include.ab3@990> XINCLUDE "multilist.include.ab3"
00004E20 <multilist.include.ab3@991> XINCLUDE "multilist.include.ab3"
00004E2A <multilist.include.ab3@992> XINCLUDE "multilist.include.ab3"
00004E2E <multilist.include.ab3@993> XINCLUDE "multilist.include.ab3"
00004E42 <multilist.include.ab3@994> XINCLUDE "multilist.include.ab3"
00004EF2 <multilist.include.ab3@995> XINCLUDE "multilist.include.ab3"
00004EF6 <multilist.include.ab3@996> XINCLUDE "multilist.include.ab3"
00004F2C <multilist.include.ab3@997> XINCLUDE "multilist.include.ab3"
00004FDC <multilist.include.ab3@998> XINCLUDE "multilist.include.ab3"
00004FE6 <multilist.include.ab3@999> XINCLUDE "multilist.include.ab3"
00004FF0 <multilist.include.ab3@1000> XINCLUDE "multilist.include.ab3"
00004FFA <multilist.include.ab3@1001> XINCLUDE "multilist.include.ab3"
00005008 <multilist.include.ab3@1002> XINCLUDE "multilist.include.ab3"
00005012 <multilist.include.ab3@1003> XINCLUDE "multilist.include.ab3"
00005030 <multilist.include.ab3@1004> XINCLUDE "multilist.include.ab3"
0000503A <multilist.include.ab3@1005> XINCLUDE "multilist.include.ab3"
00005054 <multilist.include.ab3@1006> XINCLUDE "multilist.include.ab3"
0000505E <multilist.include.ab3@1007> XINCLUDE "multilist.include.ab3"
000050C8 <multilist.include.ab3@1008> XINCLUDE "multilist.include.ab3"
000050DC <multilist.include.ab3@1009> XINCLUDE "multilist.include.ab3"
00005114 <multilist.include.ab3@1010> XINCLUDE "multilist.include.ab3"
0000511E <multilist.include.ab3@1027> XINCLUDE "multilist.include.ab3"
00005128 <multilist.include.ab3@1047> XINCLUDE "multilist.include.ab3"
00005132 <multilist.include.ab3@1064> XINCLUDE "multilist.include.ab3"
0000513C <multilist.include.ab3@1085> XINCLUDE "multilist.include.ab3"
0000513C <dos.include.ab3@55> XINCLUDE "multilist.include.ab3"
0000513C <wbstart.include.ab3@1> XINCLUDE "wbstart.include.ab3"
00005146 <wbstart.include.ab3@14> XINCLUDE "wbstart.include.ab3"
00005150 <wbstart.include.ab3@16> XINCLUDE "wbstart.include.ab3"
0000517E <wbstart.include.ab3@39> XINCLUDE "wbstart.include.ab3"
00005192 <wbstart.include.ab3@40> XINCLUDE "wbstart.include.ab3"
000051DC <wbstart.include.ab3@41> XINCLUDE "wbstart.include.ab3"
0000520A <wbstart.include.ab3@42> XINCLUDE "wbstart.include.ab3"
00005214 <wbstart.include.ab3@43> XINCLUDE "wbstart.include.ab3"
00005252 <wbstart.include.ab3@44> XINCLUDE "wbstart.include.ab3"
0000528E <wbstart.include.ab3@45> XINCLUDE "wbstart.include.ab3"
000052A2 <wbstart.include.ab3@46> XINCLUDE "wbstart.include.ab3"
000052A6 <wbstart.include.ab3@48> XINCLUDE "wbstart.include.ab3"
000052C6 <wbstart.include.ab3@49> XINCLUDE "wbstart.include.ab3"
00005344 <wbstart.include.ab3@50> XINCLUDE "wbstart.include.ab3"
00005348 <wbstart.include.ab3@51> XINCLUDE "wbstart.include.ab3"
0000538C <wbstart.include.ab3@52> XINCLUDE "wbstart.include.ab3"
00005396 <wbstart.include.ab3@53> XINCLUDE "wbstart.include.ab3"
000053A0 <wbstart.include.ab3@54> XINCLUDE "wbstart.include.ab3"
000053B4 <wbstart.include.ab3@55> XINCLUDE "wbstart.include.ab3"
000053C6 <wbstart.include.ab3@56> XINCLUDE "wbstart.include.ab3"
000053F0 <wbstart.include.ab3@58> XINCLUDE "wbstart.include.ab3"
00005404 <wbstart.include.ab3@59> XINCLUDE "wbstart.include.ab3"
00005432 <wbstart.include.ab3@61> XINCLUDE "wbstart.include.ab3"
0000543C <wbstart.include.ab3@62> XINCLUDE "wbstart.include.ab3"
0000544A <wbstart.include.ab3@63> XINCLUDE "wbstart.include.ab3"
000054A2 <wbstart.include.ab3@64> XINCLUDE "wbstart.include.ab3"
000054D0 <wbstart.include.ab3@68> XINCLUDE "wbstart.include.ab3"
000054EC <wbstart.include.ab3@69> XINCLUDE "wbstart.include.ab3"
00005554 <wbstart.include.ab3@70> XINCLUDE "wbstart.include.ab3"
0000555E <wbstart.include.ab3@71> XINCLUDE "wbstart.include.ab3"
00005572 <wbstart.include.ab3@72> XINCLUDE "wbstart.include.ab3"
00005584 <wbstart.include.ab3@73> XINCLUDE "wbstart.include.ab3"
00005584 <dos.include.ab3@57> XINCLUDE "wbstart.include.ab3"
0000558E <dos.include.ab3@59> #MAX_DOSTEMPSTRING  = 4096
000055B4 <dos.include.ab3@60> MaxLen dos_tempstring.s = #MAX_DOSTEMPSTRING
000055BE <dos.include.ab3@62> NEWTYPE.DiskObject_
000055D2 <dos.include.ab3@78> *dos_WBMsg.WBStartup    = 0
000055E6 <dos.include.ab3@79> *dos_icon.DiskObject_   = 0
00005618 <dos.include.ab3@80> dos_iconfile.s          = ""
0000562C <dos.include.ab3@81> dos_iconmodified.l      = 0
0000565E <dos.include.ab3@82> dos_debugexe.s          = ""
00005690 <dos.include.ab3@83> dos_lastscanpatt.s      = ""
000056C2 <dos.include.ab3@84> dos_lastscanpath.s      = ""
000056D6 <dos.include.ab3@85> dos_lastscanflags.l     = 0
000056EA <dos.include.ab3@86> *dos_scanlist.ml_node   = 0
000056FE <dos.include.ab3@87> *dos_scanroot.ml_node   = 0
00005712 <dos.include.ab3@88> *dos_devicelist.ml_node = 0
00005726 <dos.include.ab3@89> *dos_deviceroot.ml_node = 0
0000573A <dos.include.ab3@90> *dos_volumelist.ml_node = 0
0000574E <dos.include.ab3@91> *dos_volumeroot.ml_node = 0
00005762 <dos.include.ab3@92> *dos_assignlist.ml_node = 0
00005776 <dos.include.ab3@93> *dos_assignroot.ml_node = 0
000057A0 <dos.include.ab3@94> *dos_fib.FileInfoBlock  = AllocDosObject_ (#DOS_FIB,#TAG_DONE)
000057B4 <dos.include.ab3@95> version_iconlib.l = 0
000057C8 <dos.include.ab3@96> version_doslib.l  = 0
0000580A <dos.include.ab3@98> Dim List dos_toolstring.s(0)
00005814 <dos.include.ab3@100> #CLIARGMODE_OS       = 0
0000581E <dos.include.ab3@101> #CLIARGMODE_BLITZ    = 1
00005828 <dos.include.ab3@102> #CLIARGMODE_DISABLED = 2
00005832 <dos.include.ab3@104> #dos_scan_dirs          = 1
0000583C <dos.include.ab3@105> #dos_scan_files         = 2
00005846 <dos.include.ab3@106> #dos_scan_nocasesense   = 4
00005850 <dos.include.ab3@107> #dos_scan_sorted        = 8
0000585A <dos.include.ab3@111> #CLIARGMODE=#CLIARGMODE_BLITZ
00005884 <dos.include.ab3@129> Function.l dos_FromBlitz{}
0000589A <dos.include.ab3@130> Function Return FromBlitz
000058AA <dos.include.ab3@131> End Function
000058D4 <dos.include.ab3@144> Function.l dos_FromCLI {}
0000590A <dos.include.ab3@145> If dos_FromBlitz{} Then Function Return 0
0000592A <dos.include.ab3@146> *pr.Process = FindTask_(0)
00005984 <dos.include.ab3@147> If *pr\pr_CLI = 0 Then succ.l=False:Else succ=True
00005998 <dos.include.ab3@148> Function Return succ
000059AA <dos.include.ab3@149> End Function
000059D4 <dos.include.ab3@162> Function.l dos_FromWB {}
00005A0A <dos.include.ab3@163> If dos_FromBlitz{} Then Function Return 0
00005A2A <dos.include.ab3@164> *pr.Process = FindTask_(0)
00005A84 <dos.include.ab3@165> If *pr\pr_CLI = 0 Then succ.l=True:Else succ=False
00005A98 <dos.include.ab3@166> Function Return succ
00005AAA <dos.include.ab3@167> End Function
00005AE8 <dos.include.ab3@183> Function.l dos_GetLibVersion{library.s}
00005AFE <dos.include.ab3@184> libversion.l = -1
00005B28 <dos.include.ab3@185> *lib.Library=OpenLibrary_(&library.s,0)
00005B3C <dos.include.ab3@186> If *lib
00005B5C <dos.include.ab3@187> libversion.l = *lib\lib_Version
00005B76 <dos.include.ab3@188> CloseLibrary_ *lib
00005B80 <dos.include.ab3@189> End If
00005B94 <dos.include.ab3@190> Function Return libversion
00005BBA <dos.include.ab3@191> End Function
00005BC4 <dos.include.ab3@416> NEWTYPE.arghandlex
00005BCE <dos.include.ab3@419> DEFTYPE.arghandlex arghandle
00005BD8 <dos.include.ab3@429> Function.s dos_GetNextArg {}
00005C06 <dos.include.ab3@444> Function.s dos_GetArg {argc.l}
00005C10 <dos.include.ab3@445> SHARED arghandle
00005C4E <dos.include.ab3@446> If argc<1 Then argc=1
00005C68 <dos.include.ab3@447> arghandle\argcounter = argc
00005D18 <dos.include.ab3@448> If NumPars>=arghandle\argcounter Then a.s = Par$(arghandle\argcounter):Else a.s = ""
00005D4C <dos.include.ab3@449> Function Return a.s
00005D70 <dos.include.ab3@450> End Function
00005D9A <dos.include.ab3@460> Function.l dos_GetNumArgs {}
00005DB6 <dos.include.ab3@461> Function Return NumPars
00005DC6 <dos.include.ab3@462> End Function
00005DD0 <dos.include.ab3@472> Statement dos_ReadArgs {}
00005DFA <dos.include.ab3@478> Statement dos_FreeArgs{}
00005E08 <dos.include.ab3@479> End Statement
00005E12 <dos.include.ab3@509> Function.s dos_AddPartAB3 {path.s,fil.s}
00005E60 <dos.include.ab3@540> Function.s dos_AddPart {pathpart.s,filepart.s}
00005E6A <dos.include.ab3@541> SHARED dos_tempstring.s
00005EA8 <dos.include.ab3@542> dos_tempstring = pathpart
00005ED8 <dos.include.ab3@543> AddPart_ &dos_tempstring,&filepart.s,#MAX_DOSTEMPSTRING
00005F02 <dos.include.ab3@544> Function Return Peek.s(&dos_tempstring)
00005F2E <dos.include.ab3@545> End Function
00005F38 <dos.include.ab3@548> Function.s dos_DevicePart{path.s}
00005F42 <dos.include.ab3@581> Function.s dos_FilePartAB3 {path.s}
00005F4C <dos.include.ab3@613> Function.s dos_PathPartAB3 {path.s}
00005F56 <dos.include.ab3@643> Function.s dos_ParentPathAB3 {path.s}
00005F94 <dos.include.ab3@673> Function.s dos_FilePart {filename.s}
00005FB4 <dos.include.ab3@674> fptr.l = FilePart_(&filename.s)
00005FC8 <dos.include.ab3@675> If fptr
00005FFA <dos.include.ab3@676>   filepart.s = Peek.s(fptr)
00005FFE <dos.include.ab3@677> Else
00006030 <dos.include.ab3@678>   filepath.s = ""
0000603A <dos.include.ab3@679> End If
0000606E <dos.include.ab3@680> Function Return filepart.s
00006098 <dos.include.ab3@681> End Function
000060D6 <dos.include.ab3@704> Function.s dos_PathPart {filename.s}
00006150 <dos.include.ab3@705> pathpart.s = Left$(filename.s,PathPart_(&filename.s)-&filename.s)
00006184 <dos.include.ab3@706> Function Return pathpart.s
000061AE <dos.include.ab3@707> End Function
000061EC <dos.include.ab3@723> Function.s dos_ParentPath {path.s}
00006244 <dos.include.ab3@724> Function Return dos_PathPart{path.s}
0000626E <dos.include.ab3@725> End Function
000062AC <dos.include.ab3@742> Function.l dos_Exist {filename.s}
000062D6 <dos.include.ab3@743> lock.l=Lock_(&filename.s,#ACCESS_READ)
00006332 <dos.include.ab3@744> If lock Then UnLock_ lock:succ.l=True:Else succ=False
00006346 <dos.include.ab3@745> Function Return succ
0000636C <dos.include.ab3@746> End Function
0000639A <dos.include.ab3@764> Function.l dos_CreateDosList{flags.l}
000063B8 <dos.include.ab3@765> *doslist.DosList = LockDosList_(flags)
000063CC <dos.include.ab3@766> *node.ml_node  = 0
000063E0 <dos.include.ab3@767> If *doslist
000063EA <dos.include.ab3@768>   Repeat
00006410 <dos.include.ab3@769>     *doslist = NextDosEntry_(*doslist,flags)
00006424 <dos.include.ab3@770>     If *doslist
00006474 <dos.include.ab3@771>       pathname.s = LSet$("_",64)
000064AE <dos.include.ab3@772>       NameFromLock_ *doslist\dol_Lock,&pathname.s,64
000064E2 <dos.include.ab3@773>       pathname.s = Peek.s(&pathname)
000065BC <dos.include.ab3@774>       !BADDR{name.s,*doslist\dol_Name}
0000660C <dos.include.ab3@775>       name +":"
0000667E <dos.include.ab3@776>       *node.ml_node = ml_AddNodeSorted{*node,#node_simple,name,pathname,1}
00006688 <dos.include.ab3@777>     End If
000066A8 <dos.include.ab3@778>   Until *doslist = 0
000066C2 <dos.include.ab3@779>   UnLockDosList_(flags)
000066CC <dos.include.ab3@780> End If
000066E4 <dos.include.ab3@781> *node = ml_GetFirstNode{*node}
000066F8 <dos.include.ab3@782> Function Return *node
00006718 <dos.include.ab3@783> End Function
00006742 <dos.include.ab3@799> Function.s dos_ScanAssigns{}
0000674C <dos.include.ab3@800> SHARED *dos_assignroot,*dos_assignlist
0000676C <dos.include.ab3@801> If *dos_assignroot=0
00006780 <dos.include.ab3@802>   x.l = #LDF_READ|#LDF_ASSIGNS ;  this is due to a bug in AmiBlitz3.3 compiler
00006798 <dos.include.ab3@803>   *dos_assignroot = dos_CreateDosList{x}
000067AA <dos.include.ab3@804>   *dos_assignlist = *dos_assignroot
000067B4 <dos.include.ab3@805> End If
000067C8 <dos.include.ab3@806> If *dos_assignlist
00006806 <dos.include.ab3@807>   name.s = ml_GetLabelString{*dos_assignlist}
0000681E <dos.include.ab3@808>   *dos_assignlist = ml_GetNextNode{*dos_assignlist}
00006822 <dos.include.ab3@809> Else
00006854 <dos.include.ab3@810>   name.s = ""
00006868 <dos.include.ab3@811>   ml_RemoveAllNodes{*dos_assignroot}
0000687C <dos.include.ab3@812>   *dos_assignroot=0
00006886 <dos.include.ab3@813> End If
000068BA <dos.include.ab3@814> Function Return name.s
000068DE <dos.include.ab3@815> End Function
00006908 <dos.include.ab3@831> Function.s dos_ScanDevices{}
00006912 <dos.include.ab3@832> SHARED *dos_deviceroot,*dos_devicelist
00006932 <dos.include.ab3@833> If *dos_deviceroot=0
00006946 <dos.include.ab3@834>   x.l = #LDF_READ|#LDF_DEVICES
0000695E <dos.include.ab3@835>   *dos_deviceroot = dos_CreateDosList{x}
00006970 <dos.include.ab3@836>   *dos_devicelist = *dos_deviceroot
0000697A <dos.include.ab3@837> End If
0000698E <dos.include.ab3@838> If *dos_devicelist
000069CC <dos.include.ab3@839>   name.s = ml_GetLabelString{*dos_devicelist}
000069E4 <dos.include.ab3@840>   *dos_devicelist = ml_GetNextNode{*dos_devicelist}
000069E8 <dos.include.ab3@841> Else
00006A1A <dos.include.ab3@842>   name.s = ""
00006A42 <dos.include.ab3@843>   ml_RemoveAllNodes{*dos_deviceroot} : *dos_deviceroot=0
00006A4C <dos.include.ab3@844> End If
00006A80 <dos.include.ab3@845> Function Return name.s
00006AA4 <dos.include.ab3@846> End Function
00006ACE <dos.include.ab3@862> Function.s dos_ScanVolumes{}
00006AD8 <dos.include.ab3@863> SHARED *dos_volumeroot,*dos_volumelist
00006AF8 <dos.include.ab3@864> If *dos_volumeroot=0
00006B0C <dos.include.ab3@865>   x.l = #LDF_READ|#LDF_VOLUMES
00006B24 <dos.include.ab3@866>   *dos_volumeroot = dos_CreateDosList{x}
00006B36 <dos.include.ab3@867>   *dos_volumelist = *dos_volumeroot
00006B40 <dos.include.ab3@868> End If
00006B54 <dos.include.ab3@869> If *dos_volumelist
00006B92 <dos.include.ab3@870>   name.s = ml_GetLabelString{*dos_volumelist}
00006BAA <dos.include.ab3@871>   *dos_volumelist = ml_GetNextNode{*dos_volumelist}
00006BAE <dos.include.ab3@872> Else
00006BE0 <dos.include.ab3@873>   name.s = ""
00006C08 <dos.include.ab3@874>   ml_RemoveAllNodes{*dos_volumeroot} : *dos_volumeroot=0
00006C12 <dos.include.ab3@875> End If
00006C46 <dos.include.ab3@876> Function Return name.s
00006C6A <dos.include.ab3@877> End Function
00006CA8 <dos.include.ab3@893> Function.l dos_CheckAssign {name.s}
00006D72 <dos.include.ab3@894> If Right$(name.s,1)=":" Then name.s = UnLeft$(name.s,1)
00006D92 <dos.include.ab3@895> *assignlist.DosList = LockDosList_(#LDF_READ|#LDF_ASSIGNS)
00006DA6 <dos.include.ab3@896> If *assignlist
00006DD8 <dos.include.ab3@897>   found.l = FindDosEntry_(*assignlist,&name.s,#LDF_ASSIGNS)
00006DEC <dos.include.ab3@898>   If found
00006DFC <dos.include.ab3@899>     succ.l = True
00006E00 <dos.include.ab3@900>   Else
00006E10 <dos.include.ab3@901>     succ.l = False
00006E1A <dos.include.ab3@902>   End If
00006E36 <dos.include.ab3@903>   UnLockDosList_(#LDF_READ|#LDF_ASSIGNS)
00006E40 <dos.include.ab3@904> End If
00006E54 <dos.include.ab3@905> Function Return succ.l
00006E7A <dos.include.ab3@906> End Function
00006E84 <dos.include.ab3@927> Function.l dos_SetAssign {name.s,path.s,@force.l}
00006E8E <dos.include.ab3@955> Function.l dos_SetAssignLock {name.s,path.s,@force.l}
00006E98 <dos.include.ab3@987> Function.l dos_AddAssign{name.s,path.s}
00006EA2 <dos.include.ab3@1013> Function.l dos_RemAssign {name.s,@path.s}
00006ECC <dos.include.ab3@1036> Statement dos_ReadWBArgs {}
00006ED6 <dos.include.ab3@1037> SHARED *dos_WBMsg.WBStartup
00006EDC <dos.include.ab3@1039> SysJsr $BF01 ; GetWBStartupMsg
00006EE2 <dos.include.ab3@1040> MOVE.l d0,WBStartupMsg
00006EFC <dos.include.ab3@1041> *dos_WBMsg.WBStartup    = Peek.l(?WBStartupMsg)
00006F02 <dos.include.ab3@1042> JMP SkipDosASM
00006F06 <dos.include.ab3@1044> Dc.l 0
00006F14 <dos.include.ab3@1047> End Statement
00006F1E <dos.include.ab3@1049> Function.WBStartup dos_GetWBStartup{}
00006F48 <dos.include.ab3@1070> Function.l dos_GetWBNumArgs{}
00006F5C <dos.include.ab3@1071> _WBNumArgs.l = 0
00006F72 <dos.include.ab3@1072> If dos_FromWB{}
00006F7C <dos.include.ab3@1074>   SHARED *dos_WBMsg
00006FB6 <dos.include.ab3@1075>   If *dos_WBMsg = 0 Then dos_ReadWBArgs{}
00006FCA <dos.include.ab3@1076>   If *dos_WBMsg
00006FE8 <dos.include.ab3@1077>     _WBNumArgs.l = *dos_WBMsg\sm_NumArgs
00006FF2 <dos.include.ab3@1078>   End If
00006FFC <dos.include.ab3@1080> End If
00007010 <dos.include.ab3@1081> Function Return _WBNumArgs
00007022 <dos.include.ab3@1082> End Function
00007050 <dos.include.ab3@1098> Function.s dos_GetWBArg{argc.l}
00007082 <dos.include.ab3@1099> arg.s = ""
00007098 <dos.include.ab3@1100> If dos_FromWB{}
000070A2 <dos.include.ab3@1102>   SHARED *dos_WBMsg
000070DC <dos.include.ab3@1103>   If *dos_WBMsg = 0 Then dos_ReadWBArgs{}
000070F0 <dos.include.ab3@1104>   If *dos_WBMsg
0000711A <dos.include.ab3@1105>     If argc<*dos_WBMsg\sm_NumArgs
00007158 <dos.include.ab3@1106>       *argP.WBArg = *dos_WBMsg\sm_ArgList + (SizeOf.WBArg * argc)
00007196 <dos.include.ab3@1107>       arg.s = Peek.s(*argP\wa_Name)
000071A0 <dos.include.ab3@1108>     End If
000071AA <dos.include.ab3@1109>   End If
000071B4 <dos.include.ab3@1111> End If
000071E8 <dos.include.ab3@1112> Function Return arg.s
0000720C <dos.include.ab3@1113> End Function
0000723A <dos.include.ab3@1129> Function.l dos_GetWBLock{argc.l}
0000724E <dos.include.ab3@1130> lock.l = 0
00007264 <dos.include.ab3@1131> If dos_FromWB{}
0000726E <dos.include.ab3@1133>   SHARED *dos_WBMsg
000072A8 <dos.include.ab3@1134>   If *dos_WBMsg = 0 Then dos_ReadWBArgs{}
000072BC <dos.include.ab3@1135>   If *dos_WBMsg
000072E6 <dos.include.ab3@1136>     If argc<*dos_WBMsg\sm_NumArgs
00007324 <dos.include.ab3@1137>       *argP.WBArg = *dos_WBMsg\sm_ArgList + (SizeOf.WBArg * argc)
0000733E <dos.include.ab3@1138>       lock = *argP\wa_Lock
00007348 <dos.include.ab3@1139>     End If
00007352 <dos.include.ab3@1140>   End If
0000735C <dos.include.ab3@1142> End If
00007370 <dos.include.ab3@1143> Function Return lock
00007382 <dos.include.ab3@1144> End Function
000073C0 <dos.include.ab3@1170> Function.s dos_GetProgDir {defaultdir.s}
000073CA <dos.include.ab3@1171> SHARED dos_tempstring,dos_debugexe
000073E0 <dos.include.ab3@1172> If dos_FromBlitz{}
000074C6 <dos.include.ab3@1173>   If defaultdir="" AND dos_debugexe><"" Then defaultdir=dos_PathPart{dos_debugexe}
000074FA <dos.include.ab3@1174>   Function Return defaultdir.s
00007504 <dos.include.ab3@1175> End If
00007536 <dos.include.ab3@1176> NameFromLock_ GetProgramDir_(),&dos_tempstring,#MAX_DOSTEMPSTRING
0000756A <dos.include.ab3@1177> path.s=Peek.s(&dos_tempstring)
0000759E <dos.include.ab3@1179> Function Return path.s
000075C8 <dos.include.ab3@1180> End Function
00007606 <dos.include.ab3@1198> Function.s dos_GetProgFile {defaultexe.s}
00007610 <dos.include.ab3@1199> SHARED dos_tempstring,dos_debugexe
0000769E <dos.include.ab3@1200> If defaultexe = "" Then defaultexe = dos_debugexe
000076D0 <dos.include.ab3@1201> exe.s = ""
000076E6 <dos.include.ab3@1202> If dos_FromBlitz{}
00007724 <dos.include.ab3@1203>   exe = defaultexe
0000772E <dos.include.ab3@1204> End If
00007744 <dos.include.ab3@1206> If dos_FromWB{}
000077A8 <dos.include.ab3@1208>   fil.s  = dos_FilePart{dos_GetWBArg{0}}
000077FE <dos.include.ab3@1209>   path.s = dos_GetProgDir{""}
00007888 <dos.include.ab3@1210>   exe.s  = dos_AddPart{path,fil} ; get the path + file
00007892 <dos.include.ab3@1214> End If
000078A8 <dos.include.ab3@1216> If dos_FromCLI{}
000078D4 <dos.include.ab3@1217>   If GetProgramName_ (&dos_tempstring,#MAX_DOSTEMPSTRING  )
00007908 <dos.include.ab3@1218>     exe.s = Peek.s(&dos_tempstring)
00007912 <dos.include.ab3@1222>   End If
0000791C <dos.include.ab3@1223> End If
00007950 <dos.include.ab3@1224> Function Return exe
0000797A <dos.include.ab3@1225> End Function
00007984 <dos.include.ab3@1227> Function.s dos_GetCurrentDir{}
000079C2 <dos.include.ab3@1257> Function.s dos_GetStartFile {defaultfile.s}
000079CC <dos.include.ab3@1258> SHARED dos_tempstring
000079FE <dos.include.ab3@1259> fil.s = ""
00007A14 <dos.include.ab3@1260> If dos_FromBlitz{}
00007A52 <dos.include.ab3@1261>   fil = defaultfile
00007A5C <dos.include.ab3@1262> End If
00007A72 <dos.include.ab3@1264> If dos_FromWB{}
00007A94 <dos.include.ab3@1266>   If dos_GetWBNumArgs{}>1 ; its a project icon...
00007AAE <dos.include.ab3@1267>     lock.l = dos_GetWBLock{1}
00007B12 <dos.include.ab3@1268>     fil.s  = dos_FilePart{dos_GetWBArg{1}}
00007B74 <dos.include.ab3@1269>     NameFromLock_ lock,&dos_tempstring,#MAX_DOSTEMPSTRING : path.s = Peek.s(&dos_tempstring)
00007BFE <dos.include.ab3@1270>     fil = dos_AddPart{path,fil} ; get the path + file
00007C08 <dos.include.ab3@1271>   End If
00007C12 <dos.include.ab3@1273> End If
00007C28 <dos.include.ab3@1275> If dos_FromCLI{}
00007C94 <dos.include.ab3@1276>   If dos_GetNumArgs{}>0 Then fil = dos_GetArg{0}
00007C9E <dos.include.ab3@1279> End If
00007CD2 <dos.include.ab3@1280> Function Return fil
00007CFC <dos.include.ab3@1281> End Function
00007D3A <dos.include.ab3@1297> Function.s dos_GetProgIcon {defaulticon.s}
00007D9C <dos.include.ab3@1298> icon.s = dos_GetProgFile{defaulticon}
00007DD0 <dos.include.ab3@1299> Function Return icon;+".info"
00007DFA <dos.include.ab3@1300> End Function
00007E38 <dos.include.ab3@1317> Function.s dos_GetStartIcon {defaulticon.s}
00007E8E <dos.include.ab3@1318> icon.s = dos_GetStartFile{""}
00007F40 <dos.include.ab3@1319> If icon="" Then icon.s = dos_GetProgIcon{defaulticon}
00007F74 <dos.include.ab3@1320> Function Return icon;+".info"
00007F9E <dos.include.ab3@1321> End Function
00007FDC <dos.include.ab3@1343> Function.s dos_GetStartDir {defaultdir.s}
00007FE6 <dos.include.ab3@1344> SHARED dos_tempstring,dos_debugexe
00008018 <dos.include.ab3@1345> path.s = ""
000080CA <dos.include.ab3@1346> If defaultdir="" Then defaultdir=dos_PathPart{dos_debugexe}
000080E0 <dos.include.ab3@1348> If dos_FromBlitz{}
0000811E <dos.include.ab3@1349>   path = defaultdir.s
00008128 <dos.include.ab3@1350> End If
0000813E <dos.include.ab3@1352> If dos_FromWB{}
00008194 <dos.include.ab3@1353>   path = dos_GetStartFile{""}
0000823A <dos.include.ab3@1354>   If path="" Then path = dos_GetProgFile{""}
0000829C <dos.include.ab3@1355>   path = dos_ParentPath{path}
000082A6 <dos.include.ab3@1356> End If
000082BC <dos.include.ab3@1358> If dos_FromCLI{}
000082E8 <dos.include.ab3@1359>   If GetCurrentDirName_ (&dos_tempstring,#MAX_DOSTEMPSTRING  )
0000831C <dos.include.ab3@1360>     path = Peek.s(&dos_tempstring)
00008326 <dos.include.ab3@1361>   End If
00008330 <dos.include.ab3@1362> End If
00008364 <dos.include.ab3@1363> Function Return path
0000838E <dos.include.ab3@1364> End Function
000083B8 <dos.include.ab3@1374> Function.l dos_CloseToolTypes{}
000083C2 <dos.include.ab3@1375> SHARED *dos_icon,dos_iconfile,dos_iconmodified,dos_toolstring()
000083D2 <dos.include.ab3@1376> succ.l = False
000083E6 <dos.include.ab3@1377> If *dos_icon
000083FA <dos.include.ab3@1378>   If dos_iconmodified
00008422 <dos.include.ab3@1381>     succ=PutDiskObject_ (&dos_iconfile,*dos_icon)
00008426 <dos.include.ab3@1382>   Else
00008436 <dos.include.ab3@1383>     succ=True
00008440 <dos.include.ab3@1384>   End If
0000845A <dos.include.ab3@1385>   FreeDiskObject_ *dos_icon
0000846A <dos.include.ab3@1386>   dos_iconmodified = False
0000847E <dos.include.ab3@1387>   *dos_icon        = 0
000084B0 <dos.include.ab3@1388>   dos_iconfile.s   = ""
000084CA <dos.include.ab3@1389>   ClearList dos_toolstring()
000084D4 <dos.include.ab3@1390> End If
000084E8 <dos.include.ab3@1391> Function Return succ
00008508 <dos.include.ab3@1392> End Function
00008512 <dos.include.ab3@1402> Statement dos_FlushToolTypes{}
0000851C <dos.include.ab3@1422> Function.w dos_SetDefTool{filename.s,deftool.s}
00008526 <dos.include.ab3@1466> Function.w dos_SetIconType{filename.s,icontyp.b}
00008550 <dos.include.ab3@1497> Statement dos_Free{}
0000855A <dos.include.ab3@1498> SHARED *dos_icon,dos_iconfile,dos_iconmodified
00008564 <dos.include.ab3@1499> SHARED *dos_assignroot,*dos_assignnode
0000856E <dos.include.ab3@1500> SHARED *dos_deviceroot,*dos_devicenode
00008578 <dos.include.ab3@1501> SHARED *dos_volumeroot,*dos_volumenode
00008582 <dos.include.ab3@1502> SHARED *dos_fib
00008592 <dos.include.ab3@1503> dos_CloseToolTypes{}
000085EC <dos.include.ab3@1504> If *dos_assignroot Then ml_RemoveAllNodes{*dos_assignroot} : *dos_assignroot=0 : *dos_assignnode = 0
00008646 <dos.include.ab3@1505> If *dos_deviceroot Then ml_RemoveAllNodes{*dos_deviceroot} : *dos_deviceroot=0 : *dos_devicenode = 0
000086A0 <dos.include.ab3@1506> If *dos_volumeroot Then ml_RemoveAllNodes{*dos_volumeroot} : *dos_volumeroot=0 : *dos_volumenode = 0
000086B0 <dos.include.ab3@1507> dos_FreeArgs{}
00008706 <dos.include.ab3@1508> If *dos_fib Then FreeDosObject_ #DOS_FIB,*dos_fib : *dos_fib=0
00008714 <dos.include.ab3@1509> End Statement
0000876C <dos.include.ab3@1510> !autoexit {dos_Free}
000087AA <dos.include.ab3@1526> Function.l dos_OpenToolTypes{filename.s}
000087B4 <dos.include.ab3@1527> SHARED *dos_icon,dos_iconfile,dos_iconmodified,version_iconlib.l
0000885A <dos.include.ab3@1529> If filename.s = "" Then filename.s = dos_GetProgIcon{""}
00008940 <dos.include.ab3@1530> If Right$(filename,5)=".info" Then filename = Left$(filename,FLen(filename)-5)
00008954 <dos.include.ab3@1532> If *dos_icon ; do we already have an icon open ?
000089C0 <dos.include.ab3@1533>   If filename><dos_iconfile Then dos_CloseToolTypes{}
000089CA <dos.include.ab3@1534> End If
00008A22 <dos.include.ab3@1535> If *dos_icon=0 AND filename.s><""; there is no icon open yet ? Then open it !
00008A7C <dos.include.ab3@1536>   If version_iconlib=0 Then version_iconlib = dos_GetLibVersion{"icon.library"}
00008A9C <dos.include.ab3@1537>   If version_iconlib<36
00008ABC <dos.include.ab3@1538>     *dos_icon.DiskObject_ = GetDiskObject_(&filename.s)
00008AC0 <dos.include.ab3@1539>   Else
00008AE0 <dos.include.ab3@1540>     *dos_icon.DiskObject_ = GetDiskObjectNew_(&filename.s)
00008AEA <dos.include.ab3@1541>   End If
00008B28 <dos.include.ab3@1542>   dos_iconfile         = filename
00008B38 <dos.include.ab3@1543>   dos_iconmodified     = False
00008B42 <dos.include.ab3@1544> End If
00008B56 <dos.include.ab3@1545> Function Return *dos_icon
00008B7C <dos.include.ab3@1546> End Function
00008BDA <dos.include.ab3@1576> Function.s dos_GetToolString {toolname.s,def.s,@filename.s}
00008BE4 <dos.include.ab3@1577> SHARED *dos_icon,dos_iconfile,dos_iconmodified
00008C22 <dos.include.ab3@1578> If dos_OpenToolTypes{filename} ; do we finally have an icon ?
00008C56 <dos.include.ab3@1579>   succ.l=FindToolType_(*dos_icon\do_ToolTypes,&toolname.s)
00008C6A <dos.include.ab3@1580>   If succ ; we found it!
00008C9C <dos.include.ab3@1581>     a.s=Peek.s(succ)
00008CA6 <dos.include.ab3@1582>   EndIf
00008CB0 <dos.include.ab3@1583> EndIf
00008D1E <dos.include.ab3@1584> If succ=False Then a.s = def.s ; set the default
00008E16 <dos.include.ab3@1586> If Peek.b(&a.s)=$22 AND Peek.b(&a.s+FLen(a.s)-1)=$22 Then a.s = Mid$(a.s,2,FLen(a.s)-2)
00008E4A <dos.include.ab3@1587> Function Return a.s
00008E76 <dos.include.ab3@1588> End Function
00008EC4 <dos.include.ab3@1607> Function.l dos_GetToolState {toolname.s,@filename.s}
00008ECE <dos.include.ab3@1608> SHARED *dos_icon,dos_iconfile.s,dos_iconmodified
00008EDE <dos.include.ab3@1609> tool_exist.l  = False
00008EEE <dos.include.ab3@1610> tool_active.l = False
00008F02 <dos.include.ab3@1611> res.l = 0
00008F40 <dos.include.ab3@1612> If dos_OpenToolTypes{filename}
00008F5E <dos.include.ab3@1613>   ttp.l = *dos_icon\do_ToolTypes
00008F72 <dos.include.ab3@1614>   If ttp
00008FB0 <dos.include.ab3@1615>     While Peek.l(ttp)><0 AND tool_exist=False
00008FC8 <dos.include.ab3@1616>       toolptr.l = Peek.l(ttp)
00008FDC <dos.include.ab3@1617>       If toolptr
0000901E <dos.include.ab3@1619>         string.s   = Peek.s(toolptr)  : activated.l=True
000090A6 <dos.include.ab3@1622>         nospaces.s = Replace$(string.s," ","")
00009102 <dos.include.ab3@1625>         pos.l      = Instr(nospaces,"=",1)
00009122 <dos.include.ab3@1626>         If pos>0
0000919C <dos.include.ab3@1627>           name.s = LCase$(Left$(nospaces,pos-1))
000091A0 <dos.include.ab3@1628>         Else
000091F6 <dos.include.ab3@1629>           name.s = LCase$(nospaces)
00009200 <dos.include.ab3@1630>         End If
000092F6 <dos.include.ab3@1633>         If Left$(name,1)="(" Then name = Right$(name,FLen(name)-1): activated=False
000093FE <dos.include.ab3@1634>         If activated=False AND Right$(name,1)=")" Then name = Left$(name,FLen(name)-1)
00009472 <dos.include.ab3@1636>         If name.s = LCase$(toolname)
00009482 <dos.include.ab3@1637>           tool_exist = True
000094C4 <dos.include.ab3@1638>           If activated Then tool_active=True:Else tool_active=False
000094CE <dos.include.ab3@1639>         End If
000094D8 <dos.include.ab3@1640>       End If
000094F2 <dos.include.ab3@1641>       ttp + SizeOf.l
00009500 <dos.include.ab3@1642>     Wend
0000950A <dos.include.ab3@1643>   End If
00009514 <dos.include.ab3@1644> End If
00009546 <dos.include.ab3@1645> If tool_exist Then res=1
0000957A <dos.include.ab3@1646> If tool_active Then res=-1
0000958E <dos.include.ab3@1647> Function Return res
000095B6 <dos.include.ab3@1648> End Function
000095C0 <dos.include.ab3@1664> Function.s dos_Trim{a.s}
00009612 <dos.include.ab3@1699> Function.l dos_SetToolState {toolname.s,enabled.l,@filename.s}
0000961C <dos.include.ab3@1700> SHARED *dos_icon,dos_iconfile.s,dos_iconmodified,dos_toolstring()
0000966E <dos.include.ab3@1701> If AddItem(dos_toolstring())=False Then Function Return 0
0000967E <dos.include.ab3@1702> tool_exist.l     = False
000096BC <dos.include.ab3@1703> If dos_OpenToolTypes{filename}
000096DA <dos.include.ab3@1704>   ttp.l = *dos_icon\do_ToolTypes
000096EE <dos.include.ab3@1705>   If ttp
0000972C <dos.include.ab3@1706>     While Peek.l(ttp)><0 AND tool_exist=False
00009744 <dos.include.ab3@1707>       toolptr.l = Peek.l(ttp)
00009758 <dos.include.ab3@1708>       If toolptr
0000979A <dos.include.ab3@1710>         string.s   = Peek.s(toolptr)  : activated.l=True
000097F0 <dos.include.ab3@1713>         nospaces.s = Trim$(string);dos_Trim{string}
000098E6 <dos.include.ab3@1716>         If Left$(nospaces,1)="(" Then nospaces = Right$(nospaces,FLen(nospaces)-1): activated=False
000099EE <dos.include.ab3@1717>         If activated=False AND Right$(nospaces,1)=")" Then nospaces = Left$(nospaces,FLen(nospaces)-1)
00009A4A <dos.include.ab3@1720>         pos.l      = Instr(nospaces,"=",1)
00009A6A <dos.include.ab3@1721>         If pos>0
00009AFC <dos.include.ab3@1722>           name.s = Trim$(LCase$(Left$(nospaces,pos-1)))      ; was dos_Trim
00009B00 <dos.include.ab3@1723>         Else
00009B6E <dos.include.ab3@1724>           name.s = Trim$(LCase$(nospaces)) ; was dos_trim
00009B78 <dos.include.ab3@1725>         End If
00009BEC <dos.include.ab3@1726>         If name.s = LCase$(toolname)
00009BFC <dos.include.ab3@1727>           tool_exist = True
00009C10 <dos.include.ab3@1729>           If activated
00009C36 <dos.include.ab3@1730>             If enabled=False
00009CA4 <dos.include.ab3@1731>               dos_toolstring() = "("+nospaces+")"
00009CCA <dos.include.ab3@1732>               Poke.l ttp,&dos_toolstring()       ; fixed the pointer changed to ttp tomsmart1
00009CDA <dos.include.ab3@1733>               dos_iconmodified = True
00009CE4 <dos.include.ab3@1734>             End If
00009CE8 <dos.include.ab3@1735>           Else
00009D0E <dos.include.ab3@1736>             If enabled=True
00009D58 <dos.include.ab3@1737>               dos_toolstring() = nospaces
00009D7E <dos.include.ab3@1738>               Poke.l ttp,&dos_toolstring()      ; fixed the pointer changed to ttp tomsmart1
00009D8E <dos.include.ab3@1739>               dos_iconmodified = True
00009D98 <dos.include.ab3@1740>             End If
00009DA2 <dos.include.ab3@1741>           End If
00009DAC <dos.include.ab3@1743>         End If
00009DB6 <dos.include.ab3@1744>       End If
00009DD0 <dos.include.ab3@1745>       ttp + SizeOf.l
00009DDE <dos.include.ab3@1746>     Wend
00009DE8 <dos.include.ab3@1747>   End If
00009DF2 <dos.include.ab3@1748> End If
00009E06 <dos.include.ab3@1749> Function Return tool_exist
00009E2E <dos.include.ab3@1750> End Function
00009E38 <dos.include.ab3@1776> Function.l dos_GetToolValue {toolname.s,def.l,@filename.s}   ; 0 = no value found, value else, e.g. ("$4A3F4B" or "1234")
00009E42 <dos.include.ab3@1802> Function.l dos_GetToolHex {toolname.s,def.l,@filename.s}   ; 0 = no value found, value else, e.g. ("$4A3F4B" or "1234")
00009E4C <dos.include.ab3@1834> Function.f dos_GetToolFloat {toolname.s,def.f,@iconfile.s}
00009E56 <dos.include.ab3@1862> Function.l dos_GetToolSwitch {toolname.s,@iconfile.s}
00009EB8 <dos.include.ab3@1890> Function.l dos_SetToolString {toolname.s,string.s,@filename.s,@quote.l}
00009EC2 <dos.include.ab3@1891> SHARED *dos_icon,dos_iconfile.s,dos_iconmodified,dos_toolstring()
00009F00 <dos.include.ab3@1892> If dos_OpenToolTypes{filename}
00009F48 <dos.include.ab3@1893>   If AddItem(dos_toolstring())=0 Then Function Return False
00009F5C <dos.include.ab3@1894>   If quote
00009FE8 <dos.include.ab3@1895>     dos_toolstring() = toolname.s+"=\\22"+string+"\\22"
00009FEC <dos.include.ab3@1896>   Else
0000A036 <dos.include.ab3@1897>     dos_toolstring() = toolname.s
0000A07C <dos.include.ab3@1898>     If string><""
0000A102 <dos.include.ab3@1899>       dos_toolstring()+"="+string
0000A10C <dos.include.ab3@1900>     End If
0000A116 <dos.include.ab3@1901>   End If
0000A16C <dos.include.ab3@1902>   toolname.s = LCase$(toolname.s)
0000A180 <dos.include.ab3@1903>   count.l = 0
0000A190 <dos.include.ab3@1904>   found.l = False
0000A1AE <dos.include.ab3@1906>   ttp.l = *dos_icon\do_ToolTypes
0000A1C2 <dos.include.ab3@1907>   If ttp
0000A200 <dos.include.ab3@1908>      While Peek.l(ttp)><0 AND found=False
0000A218 <dos.include.ab3@1909>       toolptr.l = Peek.l(ttp)
0000A22C <dos.include.ab3@1910>       If toolptr
0000A25E <dos.include.ab3@1911>         string.s   = Peek.s(toolptr)
0000A2E6 <dos.include.ab3@1912>         nospaces.s = Replace$(string.s," ","")
0000A342 <dos.include.ab3@1913>         pos.l      = Instr(nospaces,"=",1)
0000A362 <dos.include.ab3@1914>         If pos>=0
0000A3DC <dos.include.ab3@1915>           name.s = LCase$(Left$(nospaces,pos-1))
0000A3E0 <dos.include.ab3@1916>         Else
0000A436 <dos.include.ab3@1917>           name.s = LCase$(nospaces)
0000A440 <dos.include.ab3@1918>         End If
0000A492 <dos.include.ab3@1919>         If name.s = toolname
0000A4B8 <dos.include.ab3@1920>           Poke.l ttp,&dos_toolstring()
0000A4C8 <dos.include.ab3@1921>           dos_iconmodified = True
0000A4D8 <dos.include.ab3@1922>           found = True
0000A4E2 <dos.include.ab3@1923>         End If
0000A4FC <dos.include.ab3@1924>         count+1
0000A506 <dos.include.ab3@1925>       End If
0000A520 <dos.include.ab3@1926>       ttp + SizeOf.l
0000A52E <dos.include.ab3@1927>      Wend
0000A538 <dos.include.ab3@1928>   End If
0000A55E <dos.include.ab3@1930>   If found=False
0000A59A <dos.include.ab3@1931>     newtoolarray.l = AllocVec_(SizeOf.l*(count+2),#MEMF_CLEAR)
0000A5AE <dos.include.ab3@1932>     If newtoolarray
0000A5CE <dos.include.ab3@1933>       If *dos_icon\do_ToolTypes
0000A610 <dos.include.ab3@1934>         CopyMem_ *dos_icon\do_ToolTypes,newtoolarray,count*SizeOf.l
0000A61A <dos.include.ab3@1935>       End If
0000A638 <dos.include.ab3@1936>       *dos_icon\do_ToolTypes = newtoolarray        ; ? what happend to the original alloced mem, if it get freed ?
0000A676 <dos.include.ab3@1937>       ttp.l = *dos_icon\do_ToolTypes + count*SizeOf.l
0000A69C <dos.include.ab3@1938>       Poke.l ttp,&dos_toolstring()
0000A6BE <dos.include.ab3@1939>       Poke.l ttp+SizeOf.l,0
0000A6CE <dos.include.ab3@1940>       dos_iconmodified = True
0000A6DE <dos.include.ab3@1941>       found = True
0000A6EE <dos.include.ab3@1942>       dos_CloseToolTypes{}
0000A71C <dos.include.ab3@1943>       FreeVec_ newtoolarray : newtoolarray = 0
0000A726 <dos.include.ab3@1944>     End If
0000A730 <dos.include.ab3@1945>   End If
0000A73A <dos.include.ab3@1946> End If
0000A74E <dos.include.ab3@1947> Function Return found
0000A776 <dos.include.ab3@1948> End Function
0000A780 <dos.include.ab3@1970> Function.l dos_SetToolValue {toolname.s,value.l,@filename.s}
0000A78A <dos.include.ab3@1991> Function.l dos_SetToolHex {toolname.s,value.l,@filename.s}
0000A794 <dos.include.ab3@1996> Function.l dos_SetToolBool {toolname.s,value.w,@filename.s}
0000A79E <dos.include.ab3@2022> Function.l dos_SetToolFloat {toolname.s,value.f,@filename.s}
0000A7A8 <dos.include.ab3@2045> Function.l dos_SetToolSwitch {toolname.s,state.b,@filename.s}
0000A7B2 <dos.include.ab3@2073> Function.w dos_CheckDiskSpace {disk.s,bytes.f}
0000A7BC <dos.include.ab3@2094> Function.f dos_GetDiskSpace{disk.s}
0000A7C6 <dos.include.ab3@2114> Function.f dos_GetDiskSize{disk.s}
0000A7D0 <dos.include.ab3@2135> Function.f dos_GetDiskUsed{disk.s}
0000A7DA <dos.include.ab3@2179> Function.s dos_RemPath {filename.s,path.s}
0000A7E4 <dos.include.ab3@2210> Function.w dos_SetTaskPri {newpri.w}
0000A822 <dos.include.ab3@2243> Function.s dos_RemExt {filename.s} ; ------------------------------------------------------
0000A840 <dos.include.ab3@2244> m.l = FLen(filename.s)
0000A886 <dos.include.ab3@2245> While w$><"."
0000A9A8 <dos.include.ab3@2246>   w$=Mid$(filename.s,m,1):m-1:If m=0 OR (FLen(filename.s)-m)>8 Then w$=".":m=FLen(filename.s)
0000A9B6 <dos.include.ab3@2247> Wend
0000AA10 <dos.include.ab3@2248> filename.s = Left$(filename.s,m)
0000AA44 <dos.include.ab3@2249> Function Return filename.s
0000AA6E <dos.include.ab3@2250> End Function
0000AA78 <dos.include.ab3@2274> Function.s dos_GetExt {filename.s} ; ------------------------------------------------------
0000AA82 <dos.include.ab3@2313> Function.s dos_SetExt {filename.s,extention.s}
0000AA8C <dos.include.ab3@2336> Function.l dos_CreateDir {dir.s}
0000AACE <dos.include.ab3@2364> Function.l dos_CheckLib{library.s,libversion.l}
0000AB0C <dos.include.ab3@2365> If libversion<0 Then libversion=0
0000AB34 <dos.include.ab3@2366> *lib.Library=OpenLibrary_(&library.s,libversion)
0000AB48 <dos.include.ab3@2367> If *lib
0000AB62 <dos.include.ab3@2368>   CloseLibrary_ *lib
0000AB74 <dos.include.ab3@2369>   Function Return True
0000AB7E <dos.include.ab3@2370> End If
0000AB90 <dos.include.ab3@2371> Function Return False
0000ABB6 <dos.include.ab3@2372> End Function
0000ABC0 <dos.include.ab3@2388> Statement dos_SetDebugExe{path.s}
0000AC12 <dos.include.ab3@2409> Function.l dos_CreateFileList {path.s,pattern.s,@flags.l}
0000AC1C <dos.include.ab3@2410> SHARED dos_listlength.l,*dos_fib
0000AC46 <dos.include.ab3@2411> lock.l = Lock_(&path.s,#ACCESS_READ)
0000AC78 <dos.include.ab3@2412> If lock><0 AND *dos_fib><0
0000AC8C <dos.include.ab3@2413>   dos_listlength=0
0000ACAA <dos.include.ab3@2414>   oldlock.l = CurrentDir_(lock)
0000ACBE <dos.include.ab3@2415>   If oldlock
0000AD44 <dos.include.ab3@2416>     buf.s = LSet$(" ",FLen(pattern.s)*3+4)
0000AD60 <dos.include.ab3@2417>     If flags&#dos_scan_nocasesense
0000AD9A <dos.include.ab3@2418>       ParsePatternNoCase_ &pattern.s,&buf.s,FLen(buf.s)
0000AD9E <dos.include.ab3@2419>     Else
0000ADD8 <dos.include.ab3@2420>       ParsePattern_ &pattern.s,&buf.s,FLen(buf.s)
0000ADE2 <dos.include.ab3@2421>     End If
0000AE16 <dos.include.ab3@2422>     pattern.s = Peek.s(&buf.s)
0000AE3E <dos.include.ab3@2423>     If Examine_(lock,*dos_fib)
0000AE66 <dos.include.ab3@2424>       While ExNext_(lock,*dos_fib)
0000AEFA <dos.include.ab3@2425>         filename.s = dos_AddPart{path.s,Peek.s(&*dos_fib\fib_FileName)}
0000AF26 <dos.include.ab3@2426>         If *dos_fib\fib_DirEntryType<0
0000AF42 <dos.include.ab3@2427>           If flags&#dos_scan_files
0000AF5E <dos.include.ab3@2428>             If flags&#dos_scan_nocasesense
0000AF92 <dos.include.ab3@2429>               succ.l = MatchPatternNoCase_ (&pattern.s,&*dos_fib\fib_FileName)
0000AF96 <dos.include.ab3@2430>             Else
0000AFCA <dos.include.ab3@2431>               succ = MatchPattern_ (&pattern.s,&*dos_fib\fib_FileName)
0000AFD4 <dos.include.ab3@2432>             End If
0000AFE8 <dos.include.ab3@2433>             If succ
0000B002 <dos.include.ab3@2434>               dos_listlength+1
0000B01E <dos.include.ab3@2435>               If flags&#dos_scan_sorted
0000B0CE <dos.include.ab3@2436>                 *node.ml_node = ml_AddNodeSorted {*node,#node_simple,dos_FilePart{filename.s},filename.s,0}
0000B0D2 <dos.include.ab3@2437>               Else
0000B182 <dos.include.ab3@2438>                 *node.ml_node = ml_AddNode       {*node,#node_simple,dos_FilePart{filename.s},filename.s,0}
0000B18C <dos.include.ab3@2439>               End If
0000B196 <dos.include.ab3@2440>             End If
0000B1A0 <dos.include.ab3@2441>           EndIf
0000B1A4 <dos.include.ab3@2442>         Else
0000B1C0 <dos.include.ab3@2443>           If flags&#dos_scan_dirs
0000B1D0 <dos.include.ab3@2449>             succ = True
0000B1E4 <dos.include.ab3@2450>             If succ
0000B1FE <dos.include.ab3@2451>               dos_listlength+1
0000B21A <dos.include.ab3@2452>               If flags&#dos_scan_sorted
0000B2CA <dos.include.ab3@2453>                 *node.ml_node = ml_AddNodeSorted {*node,#node_tree,dos_FilePart{filename.s},filename.s,1}
0000B2CE <dos.include.ab3@2454>               Else
0000B37E <dos.include.ab3@2455>                 *node.ml_node = ml_AddNode       {*node,#node_tree,dos_FilePart{filename.s},filename.s,1}
0000B388 <dos.include.ab3@2456>               End If
0000B392 <dos.include.ab3@2457>             End If
0000B39C <dos.include.ab3@2458>           End If
0000B3A6 <dos.include.ab3@2459>         End If
0000B3B4 <dos.include.ab3@2460>       Wend
0000B3BE <dos.include.ab3@2461>     End If
0000B3DC <dos.include.ab3@2462>     oldlock = CurrentDir_ (oldlock)
0000B3E6 <dos.include.ab3@2463>   End If
0000B400 <dos.include.ab3@2464>   UnLock_ lock
0000B40A <dos.include.ab3@2465> End If
0000B422 <dos.include.ab3@2466> *node = ml_GetFirstNode{*node}
0000B436 <dos.include.ab3@2467> Function Return *node
0000B45E <dos.include.ab3@2468> End Function
0000B4B0 <dos.include.ab3@2489> Function.s dos_ScanDir{path.s,@pattern.s,@flags.l}
0000B4BA <dos.include.ab3@2490> SHARED dos_lastscanpatt.s,dos_lastscanpath.s,dos_lastscanflags.l,*dos_scanlist.ml_node,*dos_scanroot.ml_node
0000B56E <dos.include.ab3@2491> If path.s><dos_lastscanpath OR pattern><dos_lastscanpatt OR flags><dos_lastscanflags OR *dos_scanroot=0
0000B5AC <dos.include.ab3@2492>   dos_lastscanpath  = path
0000B5EA <dos.include.ab3@2493>   dos_lastscanpatt  = pattern
0000B5FC <dos.include.ab3@2494>   dos_lastscanflags = flags
0000B642 <dos.include.ab3@2495>   If *dos_scanroot Then ml_RemoveAllNodes{*dos_scanroot} : *dos_scanroot=0
0000B6AA <dos.include.ab3@2496>   *dos_scanroot = dos_CreateFileList{path.s,pattern.s,flags}
0000B6BC <dos.include.ab3@2497>   *dos_scanlist = *dos_scanroot
0000B6C6 <dos.include.ab3@2498> End If
0000B6DA <dos.include.ab3@2500> If *dos_scanlist
0000B718 <dos.include.ab3@2501>   filename.s = ml_GetUserString{*dos_scanlist}
0000B730 <dos.include.ab3@2502>   *dos_scanlist = ml_GetNextNode{*dos_scanlist}
0000B734 <dos.include.ab3@2503> Else
0000B766 <dos.include.ab3@2504>   filename.s = ""
0000B78E <dos.include.ab3@2505>   ml_RemoveAllNodes{*dos_scanroot} : *dos_scanroot=0
0000B798 <dos.include.ab3@2506> End If
0000B7CC <dos.include.ab3@2507> Function Return filename
0000B7F8 <dos.include.ab3@2508> End Function
0000B802 <dos.include.ab3@2510> Function.l dos_GetListLength{}
0000B80C <dos.include.ab3@2539> Function.l dos_Copy {sourcefile.s,destfile.s}
0000B816 <dos.include.ab3@2564> Function.l dos_Rename {oldname.s,newname.s}
0000B858 <dos.include.ab3@2586> Function.l dos_SetProtect {filename.s, bits.l}
0000B882 <dos.include.ab3@2587> If SetProtection_(&filename.s,bits)
0000B894 <dos.include.ab3@2588>   Function Return True
0000B8AA <dos.include.ab3@2589> Else Function Return False
0000B8B4 <dos.include.ab3@2590> EndIf
0000B8DA <dos.include.ab3@2591> End Function
0000B8E4 <dos.include.ab3@2610> Function.l dos_Delete {filename.s,@respectprotection.l}
0000B8EE <dos.include.ab3@2637> Function.l dos_GetFileSizeEx {filename.s}
0000B8F8 <dos.include.ab3@2671> Function.l dos_IsDir {filename.s}
0000B902 <dos.include.ab3@2689> Function.l dos_IsFile {filename.s}
0000B90C <dos.include.ab3@2723> Function.l dos_Check {filename.s}
0000B94A <dos.include.ab3@2754> Function.l dos_GetFileSize {filename.s}
0000B954 <dos.include.ab3@2755> SHARED *dos_fib
0000B96A <dos.include.ab3@2756> size.l = -1
0000B994 <dos.include.ab3@2757> lock.l=Lock_(&filename.s,#ACCESS_READ)
0000B9C6 <dos.include.ab3@2758> If lock><0 AND *dos_fib><0
0000B9FA <dos.include.ab3@2759>   If Examine_(lock, *dos_fib) <> 0
0000BA26 <dos.include.ab3@2760>     If *dos_fib\fib_DirEntryType < 0
0000BA44 <dos.include.ab3@2762>       size=*dos_fib\fib_Size ; filesize
0000BA48 <dos.include.ab3@2763>     Else
0000BA5E <dos.include.ab3@2764>       size=-3                  ; drawer
0000BA68 <dos.include.ab3@2765>     EndIf
0000BA6C <dos.include.ab3@2766>   Else
0000BA82 <dos.include.ab3@2767>     size=-2        ; failed!
0000BA8C <dos.include.ab3@2768>   EndIf
0000BAA6 <dos.include.ab3@2769>   UnLock_ lock
0000BAAA <dos.include.ab3@2770> Else
0000BAC0 <dos.include.ab3@2771>   size=-1
0000BACA <dos.include.ab3@2772> EndIf
0000BADE <dos.include.ab3@2773> Function Return size
0000BB04 <dos.include.ab3@2774> End Function
0000BB0E <dos.include.ab3@2790> Function.s dos_GetFileDate {filename.s}
0000BB18 <dos.include.ab3@2824> Function.s dos_TrimFileName {filename.s}
0000BB7E <dos.include.ab3@2860> Function.l dos_RunCli {filename.s,priority.l,@stacksize.l,@waitfinish.w,@cliargs.s,@inputFH.l,@outputFH.l}
0000BB9C <dos.include.ab3@2861>   DEFTYPE.tagL10 tagList : n.l = 0
0000BC6C <dos.include.ab3@2862>   If Left$(filename,1)><"\\22" Then filename = "\\22" + filename + "\\22"
0000BD2A <dos.include.ab3@2863>   If cliargs.s><"" Then filename.s + " " + cliargs.s
0000BD80 <dos.include.ab3@2864>   If waitfinish=False AND inputFH =-1 Then inputFH =Null ; protect our own file handles
0000BDD6 <dos.include.ab3@2865>   If waitfinish=False AND outputFH=-1 Then outputFH=Null
0000BE30 <dos.include.ab3@2866>   If inputFH=outputFH AND outputFH><Null AND outputFH><-1 Then inputFH=Null; in- and outputFH must NOT be the same
0000BE86 <dos.include.ab3@2868>   tagList\tag[n]\ti_Tag = #NP_Priority, priority : n=n+1
0000BF10 <dos.include.ab3@2871>   If waitfinish=False Then tagList\tag[n]\ti_Tag = #SYS_Asynch  , #DOSTRUE         : n=n+1
0000BF90 <dos.include.ab3@2872>   If stacksize > 4096  Then tagList\tag[n]\ti_Tag = #NP_StackSize, stacksize : n=n+1
0000C012 <dos.include.ab3@2873>   If inputFH  ><-1 Then tagList\tag[n]\ti_Tag = #SYS_Input    , inputFH   : n=n+1
0000C034 <dos.include.ab3@2874>   If outputFH ><-1
0000C08A <dos.include.ab3@2875>     tagList\tag[n]\ti_Tag = #SYS_Output   , outputFH  : n=n+1
0000C094 <dos.include.ab3@2879>   End If
0000C0D2 <dos.include.ab3@2880>   tagList\tag[n]\ti_Tag = #TAG_DONE , 0
0000C102 <dos.include.ab3@2882>   ret.l = SystemTagList_ (&filename.s,tagList)
0000C116 <dos.include.ab3@2883>   Function Return ret
0000C152 <dos.include.ab3@2885> End Function
0000C15C <dos.include.ab3@2887> Function.l dos_RunCli3 {filename.s,priority.l,@stacksize.l,@waitfinish.w,@cliargs.s,@inputFH.l,@outputFH.l}
0000C166 <dos.include.ab3@2916> Function.l dos_RunCli2 {filename.s,priority.l,@stacksize.l,@waitfinish.w,@cliargs.s,@inputFH.l,@outputFH.l}
0000C194 <dos.include.ab3@2970> Function.l dos_GetStackSize{@*task.Task}
0000C1F2 <dos.include.ab3@2971> If *task=-1 OR *task=0 Then *task.Task = FindTask_(0)
0000C222 <dos.include.ab3@2972> stacksize.l = (*task\tc_SPUpper - *task\tc_SPLower)
0000C236 <dos.include.ab3@2973> Function Return stacksize
0000C248 <dos.include.ab3@2974> End Function
0000C252 <dos.include.ab3@2990> Function.l dos_CheckStackSize{bytes.l}
0000C25C <dos.include.ab3@3014> Function.l dos_RunWB {filename.s}
0000C28E <dos.include.ab3@3065> a.s = "MyFile.txt"
0000C2C0 <dos.include.ab3@3066> b.s = "Sys:MyPath"
0000C34A <dos.include.ab3@3067> c.s = dos_AddPart {b.s,a.s}
0000C3C0 <dos.include.ab3@3068> NPrint "Full Path: ",c.s
0000C45A <dos.include.ab3@3069> NPrint "File Part: ",dos_FilePart {c.s}
0000C4F4 <dos.include.ab3@3070> NPrint "Path Part: ",dos_PathPart {c.s}
0000C596 <dos.include.ab3@3071> NPrint "File Size of Ram:disk.info: ",dos_GetFileSize {"ram:disk.info"},"bytes"
0000C5E2 <dos.include.ab3@3094> NPrint "wbstartupmessage1: ",*dos_WBMsg
0000C670 <dos.include.ab3@3096> NPrint "GetProgDir:   ",dos_GetProgDir{"defdir"}
0000C6FE <dos.include.ab3@3097> NPrint "GetProgFile:  ",dos_GetProgFile{"defexe"}
0000C78C <dos.include.ab3@3098> NPrint "GetProgIcon:  ",dos_GetProgIcon{"deficon"}
0000C81A <dos.include.ab3@3100> NPrint "GetStartDir:  ",dos_GetStartDir{"defdir2"}
0000C8A8 <dos.include.ab3@3101> NPrint "GetStartFile: ",dos_GetStartFile{"deffile"}
0000C936 <dos.include.ab3@3102> NPrint "GetStartIcon: ",dos_GetStartIcon{"deficon2"}
0000C998 <dos.include.ab3@3104> a.s = dos_FilePart{b.s}
0000C9CA <dos.include.ab3@3105> name.s = ""
0000CA0C <dos.include.ab3@3106> NPrint "All Devices..."
0000CA16 <dos.include.ab3@3107> Repeat
0000CA50 <dos.include.ab3@3108>   name.s = dos_ScanDevices{}
0000CA9E <dos.include.ab3@3109>   NPrint name
0000CAE4 <dos.include.ab3@3110> Until name=""
0000CB26 <dos.include.ab3@3113> NPrint "All Assigns..."
0000CB30 <dos.include.ab3@3114> Repeat
0000CB6A <dos.include.ab3@3115>   name.s = dos_ScanAssigns{}
0000CBB8 <dos.include.ab3@3116>   NPrint name
0000CBFE <dos.include.ab3@3117> Until name=""
0000CC40 <dos.include.ab3@3119> NPrint "All Volumes..."
0000CC4A <dos.include.ab3@3120> Repeat
0000CC84 <dos.include.ab3@3121>   name.s = dos_ScanVolumes{}
0000CCD2 <dos.include.ab3@3122>   NPrint name
0000CD18 <dos.include.ab3@3123> Until name=""
0000CD5A <dos.include.ab3@3125> NPrint "All Files..."
0000CD64 <dos.include.ab3@3126> Repeat
0000CDDC <dos.include.ab3@3127>   name.s = dos_ScanDir{"Sys:","#?",#dos_scan_files}
0000CE2A <dos.include.ab3@3128>   NPrint name
0000CE70 <dos.include.ab3@3129> Until name=""
0000CEA2 <dos.include.ab3@3140> filename.s = "RAM:dos.include.test.sync.txt"
0000CECC <dos.include.ab3@3141> fh.l = Open_(&filename,#MODE_NEWFILE)
0000CEE0 <dos.include.ab3@3142> If fh
0000CF50 <dos.include.ab3@3143>   dos_RunCli{"dir",0,8192,True,"Sys:",0,fh}
0000CF6A <dos.include.ab3@3144>   Close_ fh
0000CF74 <dos.include.ab3@3145> End If
0000CFA6 <dos.include.ab3@3147> filename.s = "RAM:dos.include.test.async.txt"
0000CFD0 <dos.include.ab3@3148> fh.l = Open_(&filename,#MODE_NEWFILE)
0000CFE4 <dos.include.ab3@3149> If fh
0000D054 <dos.include.ab3@3150>   dos_RunCli{"dir",0,8192,False,"Sys:",0,fh}
0000D05E <dos.include.ab3@3151> End If
0000D06E <dos.include.ab3@3153> End
